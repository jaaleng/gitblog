<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom"><id>https://github.com/jaaleng/gitblog</id><title>RSS feed of jaaleng's gitblog</title><updated>2024-07-25T14:03:37.672477+00:00</updated><link href="https://github.com/jaaleng/gitblog"/><link href="https://raw.githubusercontent.com/jaaleng/gitblog/master/feed.xml" rel="self"/><generator uri="https://lkiesow.github.io/python-feedgen" version="1.0.0">python-feedgen</generator><entry><id>https://github.com/jaaleng/gitblog/issues/56</id><title>公众号封面图、文章获取</title><updated>2024-07-25T14:03:38.071790+00:00</updated><content type="html"><![CDATA[<p>🆔  插件名称：mp-vx-insight</p>
<p>⭐️  插件功能：公众号封面图、文章获取</p>
<p>➡️  支持平台：#Chrome </p>
<p>📁  插件简介：一款一键获取微信公众号文章封面图和所有文章等功能的工具。</p>
<p>每次使用插件时，需要先打开微信公众号文章页面并刷新，然后再打开插件页面。</p>
<p>⬇️ 插件下载：<a href="https://github.com/pudongping/mp-vx-insight">点击下载</a></p>
]]></content><link href="https://github.com/jaaleng/gitblog/issues/56"/><category term="存档"/><published>2024-07-23T12:31:09+00:00</published></entry><entry><id>https://github.com/jaaleng/gitblog/issues/55</id><title>这是宇宙，看我们的银河系在哪？</title><updated>2024-07-25T14:03:38.225110+00:00</updated><content type="html"><![CDATA[<p><strong>NASA</strong>公布韦伯太空望远镜拍摄的遥远宇宙的最深、最清晰的图像。这是宇宙，看我们的银河系在哪？</p>
<p><img src="https://pic.imgdb.cn/item/62cd8efef54cd3f937e6143c.jpg" alt="" /></p>
<p>原图将在7小时候后（北京时间22:30）发布到：
<a href="https://www.nasa.gov/webbfirstimages">https://www.nasa.gov/webbfirstimages</a></p>
]]></content><link href="https://github.com/jaaleng/gitblog/issues/55"/><category term="天文"/><published>2024-07-21T12:32:13+00:00</published></entry><entry><id>https://github.com/jaaleng/gitblog/issues/54</id><title>预测恒星的运动</title><updated>2024-07-25T14:03:38.401114+00:00</updated><content type="html"><![CDATA[<p><img src="https://i.loli.net/2019/07/19/5d31e461afae461645.jpg" alt="20190719101914402.jpg" /></p>
<p>著名的球状星团杜鹃座 47，含有数百万颗恒星（图源：哈勃拍摄，NASA and Ron Gilliland (Space Telescope Science Institute)；地面拍摄，David Malin, © Anglo-Australian Observatory）</p>
<!---more--->
<p>“疯狂”天文学家 Erik Holmberg,这位仁兄在没有计算机的年代完成了两个恒星系统交汇的模拟。下图左边是他模拟的恒星系统交汇过程中的形态演化，右边则是我们拍到的合并星系 NGC 2207。</p>
<p><img src="https://i.loli.net/2019/07/19/5d31e50a562b992778.jpg" alt="20190719101914382.jpg" /></p>
<p>这项工作可是在 1941 年发表的，还要再等五年，人类第一台计算机才会诞生。前面提过，没有计算机帮助这样的计算可是要出人命的。而 Holmberg 活到了 92 岁，显然并没在 33 岁的时候就累死在稿纸堆里。那他是怎么做到的呢？</p>
<p>Holmberg 找了 74 个灯泡来代表两个星系。对，你没看错，74 个灯泡！他给不同的灯泡通上了不同的电压来代表星系中恒星的密度分布。越靠近中心电压越高，灯泡也就越亮，他通过移动灯泡来模拟星系在交汇过程中的演化。可怎么计算每个灯泡下一步应该挪到哪里去呢？Holmberg 找来了光电管测量各处的光强。因为光与引力一样是遵循距离平方反比衰减的，他巧妙地利用光强的测量代替了引力的计算。</p>
<p>就这样，史上第一个天体系统动力学演化的模拟就算是完成了。当然，这个模型的分辨率很低——用 37 个灯泡代替整个星系是有点勉强的。那多加灯泡不行吗？醒醒吧，刚才我们提到的球状星团有多少恒星来着？几十万颗。几十万个灯泡，要开烧烤店么？</p>
]]></content><link href="https://github.com/jaaleng/gitblog/issues/54"/><category term="天文"/><published>2024-07-21T12:30:57+00:00</published></entry><entry><id>https://github.com/jaaleng/gitblog/issues/53</id><title>西岳华山</title><updated>2024-07-25T14:03:38.573757+00:00</updated><content type="html"><![CDATA[<p>西岳华山，值得一去</p>
<p><img src="https://pic.downk.cc/item/5fa7eac01cd1bbb86b3f9f28.jpg" alt="" /></p>
<p><img src="https://pic.downk.cc/item/5fa7eac01cd1bbb86b3f9f2a.jpg" alt="" /></p>
<p><img src="https://pic.downk.cc/item/5fa7eac01cd1bbb86b3f9f2e.jpg" alt="" /></p>
<p><img src="https://pic.downk.cc/item/5fa7eac01cd1bbb86b3f9f31.jpg" alt="" /></p>
<p><img src="https://pic.downk.cc/item/5fa7eac01cd1bbb86b3f9f34.jpg" alt="" /></p>
]]></content><link href="https://github.com/jaaleng/gitblog/issues/53"/><category term="心情"/><published>2024-07-21T12:29:48+00:00</published></entry><entry><id>https://github.com/jaaleng/gitblog/issues/52</id><title>西夏王</title><updated>2024-07-25T14:03:38.732687+00:00</updated><content type="html"><![CDATA[<p>有幸去了趟宁夏，参观了大话西游的拍摄地</p>
<p>走马观花看了看西夏王陵，真的很大，要做观光车走一两个小时才能转完</p>
<p><img src="https://pic.downk.cc/item/5f56292f160a154a67622b4b.jpg" alt="" /></p>
<p><img src="https://pic.downk.cc/item/5f56292f160a154a67622b52.jpg" alt="" /></p>
<p><img src="https://pic.downk.cc/item/5f56292f160a154a67622b48.jpg" alt="" /></p>
<p>这一张是沙湖的景色，好有好多，不知道存那个盘上了。</p>
<p><img src="https://pic.downk.cc/item/5f56292f160a154a67622b34.jpg" alt="" /></p>
]]></content><link href="https://github.com/jaaleng/gitblog/issues/52"/><category term="生活"/><published>2024-07-21T12:29:08+00:00</published></entry><entry><id>https://github.com/jaaleng/gitblog/issues/51</id><title>斯科默岛白玉草丛中的海鹦</title><updated>2024-07-25T14:03:38.891365+00:00</updated><content type="html"><![CDATA[<p>斯科默岛白玉草丛中的海鹦，威尔士彭布罗克郡 ( Ross Hoddinott/Minden Pictures)</p>
<p><img src="https://i.loli.net/2019/08/01/5d42dde15709241618.jpg" alt="4320205d5e0fa4b7868926a358777b0.jpg" /></p>
]]></content><link href="https://github.com/jaaleng/gitblog/issues/51"/><category term="心情"/><published>2024-07-21T12:28:19+00:00</published></entry><entry><id>https://github.com/jaaleng/gitblog/issues/50</id><title>神庙OS</title><updated>2024-07-25T14:03:39.047497+00:00</updated><content type="html"><![CDATA[<p><img src="https://pic.downk.cc/item/5fc38115d590d4788ac972ce.jpg" alt="" /></p>
<h3>特里的父母一直希望他能够按时服用治疗精神病的药物。</h3>
<p>但是特里觉得这样会伤害到他的创造力，一直不愿意接受治疗。最终，特里的父母下了最后通牒：他要么乖乖吃药，就要被送去精神病院。
特里不想吃药，也不想去精神病院。于是他选择离家出走，开始了一段流浪生涯。在几个月里，他先从中西部城市菲尼克斯，一路游荡到了加利福尼亚，北上到了波特兰，最后又到了俄勒冈州的戴尔斯。
一路上，他依然不断上传视频。一些粉丝依然和他保持着联系，并且用各种方式接济他。Terry接受了粉丝赠送的食物和生活用品，但是却拒绝了粉丝们为他提供的住处。</p>
<p><img src="https://pic.downk.cc/item/5fc37f45d590d4788ac8eac9.jpg" alt="" /></p>
<h3>这场漫长的游荡，让Terry的精神状态越来越差。他的胡子越长越长，衣服也变得破破烂烂。</h3>
<p>他依然沉浸在自己当代所罗门王的幻境中，但旁人只觉得他邋里邋遢，神经兮兮，满嘴疯话。在Terry去世的前一天，他想要到图书馆去上会网，却因为衣衫褴褛被赶了出来。
Terry大受打击，上传了他人生中最后一个视频。
“这个城市很纯洁，很干净，我这样肮脏的人一定是把他们吓坏了，才会把我赶走。我挺喜欢这个图书馆的，不过他们真的估计气得够呛。” </p>
<p>Terry咳嗽了一下，对着镜头挤出一个笑容。
“当国王的感觉真棒。但在别人眼里，也许我只是一个走来走去的怪人而已吧。”
第二天，特里在铁道上游荡的时候被火车撞击身亡。火车司机坚信他是卧轨自杀，但有目击证人的证词说，特里在被撞击前一刻转了身，似乎刚刚意识到火车正从他身后开来。
特里曾经试图用各种比喻来帮助别人了解他的生活。精神分裂症让他难以分清自己生活中的真实和虚幻。别人对他说的话，都仿佛摩尔斯密码，他知道自己逐渐陷入疯狂，对此却无能为力。
“什么才是真实？我不知道。我有的时候看见鸟在盯着我的电脑屏幕，我会想，‘这只傻鸟，根本不知道它在看什么’。但是傻鸟不会明白自己是一只傻鸟，也不会为此惊慌失措。傻鸟也没有什么选择，只能这样活下去。虽然它不知道这个世界到底是怎么运转的，但它总能学会，哪些是危险的，哪些是安全的，然后就这样活下去。我就是这么活着的。”
没人知道，假如特里没有患上精神病，他会取得什么样的成就。也没人知道，“神庙OS”巧妙地底层设计，究竟是归功天才的特里更多一些，还是疯癫的特里更多一些。特里从混沌中醒来，留下了一座古怪的遗产，又回到了混沌之中，让活着的西西弗斯们，再也无法忘却死去的所罗门王。
在这十年里，一个“疯子”，完成了许多头脑清醒的程序员想都不敢想的壮举.
从小，特里就有很高的编程天赋，自己编写过许多软件和游戏.在他还是个中学生的时候，他曾经应家人的要求，写了一个体感联动游戏，用动感单车操纵游戏里的角色，猛踩踏板就能躲避鬼魂的追击.他还发明了一个自动锯木机，可以按照程序设置把木板切成各种形状.但是特里不太满意机器的效果，最后把整台机器都扔掉了.
1992年年，特里在亚利桑那州立大学取得了计算机工程学士学位，并在两年后拿到了电子工程硕士学位.之后他在票务巨头Ticketmaster任职程序员.按照这个道路下去，他原本将会成为高收入中产阶级的一员，结婚生子，度过平淡而又幸福的一生.</p>
<p>然而一切在1996戛然而止.这一年，特里被诊断出双相障碍，随后又发展成了精神分裂症，并且产生了各种妄想症状.特里觉得外星人在冥冥中统治了地球，而CIA是他们的帮凶。而他自己由于窥探到了机密，陷入了无孔不入的监控中，只有上帝才能拯救自己和人类.随后的几年里，他一直在各个精神病院中辗转.
“我那时挺疯癫的，”特里后来回忆，“当然，我现在也很疯癫，但是这不是同一种疯癫”</p>
<h3>2003年年，特里的状况有所好转，便开始了“神庙OS”的开发进程.###</h3>
<p>特里说，这一切都是因为上帝的启示:他将建造一座供奉上帝的神庙，就像旧约中所罗门的神庙一样.而当2.0时代到来的时候，他也将像所罗门一样加冕为王.不过特里并不觉得自己信仰上帝，他觉得自己是个无神论者，只是刚好和上帝有一些交流而已.
特里“按照上帝的指示”对C语言进行了改造，发明了属于他自己的“神圣C语言”(教廷、谐音教廷、隐含教皇、圣座的意思)，用来编写“神庙OS)。
“神庙OS”就是特里为“上帝”所建造的神庙，而特里所说的“上帝”，则在神庙里降下了代言人--一个用圣经全文作为种子的随机数生成器。
特里的“神庙OS”充满了各种奇怪的设定.比如OS不支持外挂GPU，因为特里觉得图形处理应该是透明的，公开的，不应该藏在GPU的黑盒里。而神庙OS只支持用光驱安装，不支持usb，因为特里觉得usb是CIA发明的，目的是通过授权费偷偷向民众收税。
特里总是宣称自己是“世界上最聪明的程序员”。如果有人不同意他的观点，特里就会怒喷对方是“尼哥”，“娘炮”。这让许多人觉得特里妄自尊大，难以理喻.
但特里的编程天分又着实让人难以忽视.在一般的操作系统里面，文件会分成文本、图片等等不同的类型.但是在“神庙OS”里，所有的文件都是同一种文件.文字、图片、3D模型和超链接全部都可以混合放在一个文件里面，直接指向源代码。</p>
<p><img src="https://pic.downk.cc/item/5fc38116d590d4788ac97343.jpg" alt="" /></p>
<p>通常，在这样的系统上运行的程序，要先用源代码编译一遍.而“神庙OS”的程序文件直接以源代码的形式存在.当程序要运行的时候，有一个即时(JIT)编译器会直接把源代码转化成程序运行.
这些另辟蹊径的做法，让“神庙OS”非常便于开发和调试，也加快了系统的运行速度，整个系统非常轻量，只有几十MB.12万行代码，没有任何现代的版本控制，全靠一个人手动写完，居然能够顺利跑起来，各种功能也大体运转正常，既证明了特里的才华，也说明他的编程方式确实有不少可取之处。
著名程序员和科技记者理查德·米顿曾经仔细研究过“神庙OS”的开发环境，并感叹：现在的程序员已经习惯把事情搞得太复杂，没有人想过，一切还可以这么简单直接。
三</p>
<h3>由于“神庙OS”太过特别，开发周期又很长，特里在程序员圈子里一直有点小名气.</h3>
<p>他在网上很活跃，很喜欢发表自己的观点和言论，当然也少不了“不太正确”的那些.有次，一家科技网站采访了特里，但是文章发布以后，因为特里总在下面和其他网友互喷，网站不得不把他的账号禁掉了.
在社交网络和直播兴起之后，特里也开始直播他的“神庙OS”开发进程，向观众展示他编写的操作系统里的各种功能.
“上帝喜欢大象，我也喜欢大象。所以我用插值向量创作了这个非常写实的大象.如果你不想要只是写实，你也可以做到比现实更好.你问‘比现实更好是什么意思？、那你要看看我的这个蓝眼睛的大象.“
他最得意的作品是一款叫“埃及之后”的模拟经营游戏.他觉得这款游戏真正体现了如何用“神庙OS”来和上帝进行交流.玩家扮演摩西，负责照顾一群信众的生活，以给信众喂食喂水，也可以到山上去祈求神谕.特里还展示了一下游戏里的法庭系统.
“一个妇女犯下了罪--我选择惩罚她。一个孩子犯下了罪--我选择狠狠惩罚他.“
在“神庙OS”完工之后，特里很高兴自己能够完成十年前发下的宏愿，但又似乎因为失去了人生目标而有点失落.他给自己加冕，叫自己“特里王”，并说，他已经搭建好了地基，只等待别人来分享这份喜悦.
“不要光顾着玩游戏，你们应该在神庙OS上多写些游戏，然后分享给别人！”特里一有机会就呼吁别人多为“神庙OS”的生态做出贡献.确实有不少闲得发慌的程序员研究了特里的“神圣C语言”，甚至编写了一些简单的程序，但是特里还是觉得，没有人像他期望的那样用“神庙OS”来和上帝交流--当然，特里自己也始终没有说清楚，正常人应该怎么和“神庙OS”里的随机数上帝交流。
有那么几年，特里就一直呆在父母家里，上网直播，和网友互动.特里颇有一些“粉丝”，有些人是发自内心欣赏他的天才，被他和精神疾病斗争的故事所打动.但是在社交媒体的时代，更多的粉丝并不在乎“神庙OS”背后的故事，他们只是拿特里当做消遣，怂恿他发表更多充满了F打头、B打头和N打头词汇的言论.</p>
<h3>特里的父母一直希望他能够按时服用治疗精神病的药物.但是特里觉得这样会伤害到他的创造力，一直不愿意接受治疗.###</h3>
<p>最终，特里的父母下了最后通牒:他要么乖乖吃药，就要被送去精神病院.
特里不想吃药，也不想去精神病院.于是他选择离家出走，开始了一段流浪生涯.在几个月里，他先从中西部城市菲尼克斯，一路游荡到了加利福尼亚，北上到了波特兰，最后又到了俄勒冈州的戴尔斯.
一路上，他依然不断上传视频.一些粉丝依然和他保持着联系，并且用各种方式接济他.特里接受了粉丝赠送的食物和生活用品，但是却拒绝了粉丝们为他提供的住处。</p>
<p><img src="https://pic.downk.cc/item/5fc38116d590d4788ac9733b.jpg" alt="" /></p>
<p>这场漫长的游荡，让terry的精神状态越来越差.他的胡子越长越长，衣服也变得破破烂烂.他依然沉浸在自己当代所罗门王的幻境中，但旁人只觉得他邋里邋遢，神经兮兮，满嘴疯话.在terry去世的前一天，他想要到图书馆去上会网，却因为衣衫褴褛被赶了出来.
特里大受打击，上传了他人生中最后一个视频。
“这个城市很纯洁，很干净，我这样肮脏的人一定是把他们吓坏了，才会把我赶走。我挺喜欢这个图书馆的，不过他们真的估计气得够呛.“</p>
<h3>特里咳嗽了一下，对着镜头挤出一个笑容。###</h3>
<p>“当国王的感觉真棒。但在别人眼里，也许我只是一个走来走去的怪人而已吧.“
第二天，特里在铁道上游荡的时候被火车撞击身亡.火车司机坚信他是卧轨自杀，但有目击证人的证词说，特里在被撞击前一刻转了身，似乎刚刚意识到火车正从他身后开来.
特里曾经试图用各种比喻来帮助别人了解他的生活.精神分裂症让他难以分清自己生活中的真实和虚幻.别人对他说的话，都仿佛摩尔斯密码，他知道自己逐渐陷入疯狂，对此却无能为力.
“什么才是真实？我不知道.我有的时候看见鸟在盯着我的电脑屏幕，我会想，‘这只傻鸟，根本不知道它在看什么’.但是傻鸟不会明白自己是一只傻鸟，也不会为此惊慌失措.傻鸟也没有什么选择，只能这样活下去.虽然它不知道这个世界到底是怎么运转的，但它总能学会，哪些是危险的，哪些是安全的，然后就这样活下去.我就是这么活着的.“
没人知道，假如特里没有患上精神病，他会取得什么样的成就.也没人知道，“神庙OS”巧妙地底层设计，究竟是归功天才的特里更多一些，还是疯癫的特里更多一些.特里从混沌中醒来，留下了一座古怪的遗产，又回到了混沌之中，让活着的西西弗斯们，再也无法忘却死去的所罗门王.</p>
]]></content><link href="https://github.com/jaaleng/gitblog/issues/50"/><category term="存档"/><published>2024-07-21T12:27:29+00:00</published></entry><entry><id>https://github.com/jaaleng/gitblog/issues/49</id><title> 陕西太白山</title><updated>2024-07-25T14:03:39.214999+00:00</updated><content type="html"><![CDATA[<p>高居在幽岭,
人得见时稀。
写箓扃虚白,
寻僧到翠微。
扫坛星下宿,
收药雨中归。
从服小还后,
自疑身解飞.</p>
<!---more--->
<p><img src="https://pic.downk.cc/item/5f5784fe160a154a67afde7e.jpg" alt="" /></p>
<p><img src="https://pic.downk.cc/item/5f5784fe160a154a67afde85.jpg" alt="" /></p>
<p><img src="https://pic.downk.cc/item/5f5784fe160a154a67afde87.jpg" alt="" /></p>
<p><img src="https://pic.downk.cc/item/5f5784fe160a154a67afde8a.jpg" alt="" /></p>
<p><img src="https://pic.downk.cc/item/5f5784fe160a154a67afde8f.jpg" alt="" /></p>
<p><img src="https://pic.downk.cc/item/5f5784fe160a154a67afde8f.jpg" alt="" /></p>
<p><img src="https://pic.downk.cc/item/5f5785e2160a154a67b01d48.jpg" alt="" /></p>
<p><img src="https://pic.downk.cc/item/5f5785e2160a154a67b01d4b.jpg" alt="" /></p>
<p><img src="https://pic.downk.cc/item/5f5785e2160a154a67b01d4e.jpg" alt="" /></p>
<p><img src="https://pic.downk.cc/item/5f5785e2160a154a67b01d53.jpg" alt="" /></p>
<p><img src="https://pic.downk.cc/item/5f57860e160a154a67b0274c.jpg" alt="" /></p>
<p><img src="https://pic.downk.cc/item/5f57860e160a154a67b0274e.jpg" alt="" /></p>
<p><img src="https://pic.downk.cc/item/5f57860e160a154a67b02751.jpg" alt="" /></p>
<p><img src="https://pic.downk.cc/item/5f57860e160a154a67b02754.jpg" alt="" /></p>
<p><img src="https://pic.downk.cc/item/5f57860e160a154a67b0275d.jpg" alt="" /></p>
]]></content><link href="https://github.com/jaaleng/gitblog/issues/49"/><category term="生活"/><published>2024-07-21T12:26:42+00:00</published></entry><entry><id>https://github.com/jaaleng/gitblog/issues/48</id><title>山水秦岭 水墨终南</title><updated>2024-07-25T14:03:39.377479+00:00</updated><content type="html"><![CDATA[<h3>山水秦岭，水墨终南</h3>
<p><img src="https://img.imgdb.cn/item/603cdf4f5f4313ce256928a9.jpg" alt="" /></p>
<p>早春二月一场春雪覆盖了终南山麓，云海笼罩着若隐若现的南五台仿佛仙境一般！</p>
<p><img src="https://img.imgdb.cn/item/603cdf4f5f4313ce256928af.jpg" alt="" /></p>
<p><img src="https://img.imgdb.cn/item/603cdf4f5f4313ce256928b2.jpg" alt="" /></p>
<p><img src="https://img.imgdb.cn/item/603cdf4f5f4313ce256928b7.jpg" alt="" /></p>
<p><img src="https://img.imgdb.cn/item/603cdf4f5f4313ce256928bd.jpg" alt="" /></p>
<p><img src="https://img.imgdb.cn/item/603cdfa35f4313ce2569577a.jpg" alt="" /></p>
<p><img src="https://img.imgdb.cn/item/603cdfa35f4313ce2569577d.jpg" alt="" /></p>
<p><img src="https://img.imgdb.cn/item/603cdfa35f4313ce25695782.jpg" alt="" /></p>
]]></content><link href="https://github.com/jaaleng/gitblog/issues/48"/><category term="生活"/><published>2024-07-21T12:25:57+00:00</published></entry><entry><id>https://github.com/jaaleng/gitblog/issues/47</id><title>秦直道</title><updated>2024-07-25T14:03:39.537398+00:00</updated><content type="html"><![CDATA[<h3>2000年前由秦将蒙恬率30万大军修建的军事通道</h3>
<h3>为世界上最早的高速公路</h3>
<p><img src="https://img.imgdb.cn/item/603f77c4360785be54d6d3e1.jpg" alt="" /></p>
<p><img src="https://img.imgdb.cn/item/603f76f1360785be54d6757a.jpg" alt="" /></p>
<p><img src="https://img.imgdb.cn/item/603f76f1360785be54d67582.jpg" alt="" /></p>
<p><img src="https://img.imgdb.cn/item/603f76f1360785be54d6758a.jpg" alt="" /></p>
<p><img src="https://img.imgdb.cn/item/603f76f1360785be54d67593.jpg" alt="" /></p>
<p><img src="https://img.imgdb.cn/item/603f76f1360785be54d67598.jpg" alt="" /></p>
]]></content><link href="https://github.com/jaaleng/gitblog/issues/47"/><category term="生活"/><published>2024-07-21T12:25:15+00:00</published></entry><entry><id>https://github.com/jaaleng/gitblog/issues/46</id><title>潘塔纳尔湿地的美洲豹，巴西</title><updated>2024-07-25T14:03:39.697058+00:00</updated><content type="html"><![CDATA[<p>潘塔纳尔湿地的美洲豹，<em>巴西</em>  潘塔纳尔湿地的美洲豹，<em>巴西</em> </p>
<blockquote>
<p>( Andy Rouse/Minden Pictures)</p>
</blockquote>
<p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9pLmxvbGkubmV0LzIwMTkvMDcvMTAvNWQyNWYxMjg1Njk4ZTEwNjc0LmpwZw" alt="20190710220502.jpg" /></p>
]]></content><link href="https://github.com/jaaleng/gitblog/issues/46"/><category term="生活"/><category term="心情"/><published>2024-07-21T12:24:33+00:00</published></entry><entry><id>https://github.com/jaaleng/gitblog/issues/45</id><title>排灯节期间摆放在蓝果丽上的油灯</title><updated>2024-07-25T14:03:39.849809+00:00</updated><content type="html"><![CDATA[<p>description: 排灯节期间摆放在蓝果丽上的油灯 ( Subir Basak/Getty Images)
top_img:</p>
<p>cover: <a href="https://pic.downk.cc/item/5fb10980bd99533d38f1d806.jpg">https://pic.downk.cc/item/5fb10980bd99533d38f1d806.jpg</a></p>
<hr />
<p>排灯节期间摆放在蓝果丽上的油灯 ( Subir Basak/Getty Images)</p>
<p><img src="https://pic.downk.cc/item/5fb108b713b6a3f6d12101b1.jpg" alt="" /></p>
]]></content><link href="https://github.com/jaaleng/gitblog/issues/45"/><category term="生活"/><category term="心情"/><published>2024-07-21T12:23:50+00:00</published></entry><entry><id>https://github.com/jaaleng/gitblog/issues/44</id><title>宁武悬空古栈道</title><updated>2024-07-25T14:03:39.988535+00:00</updated><content type="html"><![CDATA[<p>宁武悬空古栈道</p>
<p>山路崎岖蜿蜒，悬崖峭壁。一座座悬空古刹由栈道和涵洞相连，惊险刺激.</p>
<p><img src="https://i.loli.net/2019/08/08/K5jnoUFfRlBdWCw.jpg" alt="252c903cd7ab6a6ee0a4b056276dca1.jpg" /></p>
<!---more--->
<p><img src="https://i.loli.net/2019/08/08/B6W25ZaxSKoUhmr.jpg" alt="eeac748c1c96a0927387d29d3e6dd5a.jpg" /></p>
<p><img src="https://i.loli.net/2019/08/08/hFaDu7CpOR5Q3KX.jpg" alt="88f0bec52203f0b10599399d6bc361e.jpg" /></p>
<p><img src="https://i.loli.net/2019/08/08/mkXsfGz8nbd3utw.jpg" alt="e66bc70372fb141d4bc2c5351de01cf.jpg" /></p>
]]></content><link href="https://github.com/jaaleng/gitblog/issues/44"/><category term="生活"/><published>2024-07-21T12:22:49+00:00</published></entry><entry><id>https://github.com/jaaleng/gitblog/issues/43</id><title>猫猫娜拉：搭顺风车 环游世界</title><updated>2024-07-25T14:03:40.140764+00:00</updated><content type="html"><![CDATA[<p>description: 搭顺风车 环游世界</p>
<p>top_img:</p>
<p>cover: <a href="https://pic.downk.cc/item/5f747b89160a154a67d29ba0.jpg">https://pic.downk.cc/item/5f747b89160a154a67d29ba0.jpg</a>   </p>
<hr />
<p><img src="https://pic.downk.cc/item/5f747b89160a154a67d29ba0.jpg" alt="" /></p>
<p>当前爱丁堡橄榄球选手迪恩·尼科尔森（Dean Nicholson）辞职准备环游世界时，他希望迎来的是改变人生的经历。
但这位31岁的年轻人并没有意识到，一只“四脚兽”将永远改变他的生活。来自苏格兰小镇邓巴（Dunbar)的迪恩厌倦朝九晚五的生活，决定骑自行车看世界。</p>
<p><img src="https://pic.downk.cc/item/5f747b89160a154a67d29ba4.jpg" alt="" /></p>
<p>迪恩立即和小猫娜拉产生感情。
他从苏格兰出发前往阿姆斯特丹。在登上前往克罗地亚的渡轮之前，他骑车经过比利时、希腊，瑞士和意大利。
在前往波斯尼亚的路上，他在那里遇到一只小小的条纹生物，她将成为他的旅伴。迪恩告诉BBC：“那只是非常平常的一天。我正要穿越黑山（Montenegro），当时我正骑着自行车爬山。我听到一只野猫在身后喵喵叫。她正追我上山。我停下来，她不离开，一直待在我身旁。我把她很舒服地放在自行车前，带她去下一个镇，我想看看她是否被装了芯片。”
“她没装芯片。她爬上我的肩膀后就睡着了。我想她和我一起环游世界。”</p>
<p><img src="https://pic.downk.cc/item/5f747b89160a154a67d29bb3.jpg" alt="" /></p>
<p>一只猫，一辆车和一条路。
图像来源，Instagram/1bike1world
娜拉坐过缆车。
迪恩最初想尽快骑到泰国的计划泡汤，他给小猫取名为娜拉，他意识到娜拉改变了他。
在奥地利接受采访时他说：“她教我放慢脚步，更好享受生活。她在车上，所以她的需求是第一位。这减缓游览速度，现在我们停下脚步有更多时间游玩。如果有树林我们会停下来玩，她喜欢在沙滩奔跑。”</p>
<p><img src="https://pic.downk.cc/item/5f747cc9160a154a67d2efc4.jpg" alt="" /></p>
<p>娜拉也有自己的护照。
他们已旅行大约1万英里。迪恩不得不为娜拉办宠物护照，现在世界就在他们脚下。
这位毛茸茸的朋友是如此重要，她甚至可以决定行程。</p>
<p><img src="https://pic.downk.cc/item/5f747cc9160a154a67d2efc1.jpg" alt="" /></p>
<p>他们想在泰国的沙滩上结束旅行。
迪恩说：“我不能和猫一起去伊朗，因为伊朗的旅馆不允许猫住，所以我们错过了。现在的计划是在春天骑自行车穿越俄罗斯。”迪恩和娜拉所到之处吸引很多目光。当地人对这只小乘客表示敬畏，她坐在自行车前部的定制篮子里或者旅行颠簸时，就在迪恩肩上。</p>
<p><img src="https://pic.downk.cc/item/5f747b89160a154a67d29b9a.jpg" alt="" /></p>
<p>坐皮划艇：这只猫没有什么不敢尝试。
人们把他们停下来，想看那只猫，她已经至少为主人赢得一杯啤酒。娜拉去过阿尔巴尼亚和希腊，现在又回到苏格兰的邓巴小镇。她坐过缆车，喜欢皮划艇。</p>
<p><img src="https://pic.downk.cc/item/5f747b89160a154a67d29bac.jpg" alt="" />
它们已成为社交媒体上的热点，在Instagram上吸引80万名关注者，每天约收到1000条消息。
他们在YouTube上的15万订阅者带来足够的广告收入，这可以负担自行车维修费和养猫的开支。娜拉甚至有以它为主题的日历，现在有一本书写他们的冒险经历。
迪恩说：“我们将在希腊过冬，在动物保护区工作。然后在春天穿过俄罗斯，再出发前往泰国。我想实现在海滩上喝椰汁的梦想。”</p>
<p>当然，还要有猫。</p>
]]></content><link href="https://github.com/jaaleng/gitblog/issues/43"/><category term="生活"/><published>2024-07-21T12:22:13+00:00</published></entry><entry><id>https://github.com/jaaleng/gitblog/issues/42</id><title>已删库的著名工具列表统计如下</title><updated>2024-07-25T14:03:40.299297+00:00</updated><content type="html"><![CDATA[<p><strong>截至目前，已删库的著名工具列表统计如下</strong>：</p>
<ol>
<li>Clash.Meta「已archived」</li>
<li>Clash Core「已删库」</li>
<li>Clash for Windows「已删库」</li>
<li>Tuic协议「已删库」</li>
<li>Helloworld路由器插件「已删库」</li>
<li>Gui.For.Clash「已删库」</li>
<li>ClashForAndroid 「已删库」</li>
<li>homeproxy 「已archived」</li>
<li>ClashMetaForAndroid 「已archived」</li>
<li>Fclash 「已archived」</li>
<li>Clash verge 「已archived」</li>
</ol>
]]></content><link href="https://github.com/jaaleng/gitblog/issues/42"/><category term="存档"/><published>2024-07-21T12:21:20+00:00</published></entry><entry><id>https://github.com/jaaleng/gitblog/issues/41</id><title>惠塔国家公园的海岸线</title><updated>2024-07-25T14:03:40.485388+00:00</updated><content type="html"><![CDATA[<p>惠塔国家公园的海岸线，哥斯达黎加 ( Greg Basco/Minden Pictures)</p>
<p><img src="https://i.loli.net/2019/07/29/5d3ee9085ae4f10635.jpg" alt="20190729203521.jpg" /></p>
]]></content><link href="https://github.com/jaaleng/gitblog/issues/41"/><category term="生活"/><published>2024-07-21T12:20:32+00:00</published></entry><entry><id>https://github.com/jaaleng/gitblog/issues/40</id><title>关山草原</title><updated>2024-07-25T14:03:40.647667+00:00</updated><content type="html"><![CDATA[<h4>也称“关山牧场”，景色优美，空气清新.</h4>
<!--- moer --->
<p><img src="https://s1.ax1x.com/2020/08/31/dXBOzQ.jpg" alt="dXBOzQ.jpg" /></p>
<p>有机会可以去一下，可以烤全羊，可以骑马</p>
<p><img src="https://pic.downk.cc/item/5f4cf4b8160a154a67fd75c9.jpg" alt="" /></p>
]]></content><link href="https://github.com/jaaleng/gitblog/issues/40"/><category term="生活"/><published>2024-07-21T12:18:33+00:00</published></entry><entry><id>https://github.com/jaaleng/gitblog/issues/39</id><title>电话号码泄露一小时后，你的个人信息就能被查个底朝天</title><updated>2024-07-25T14:03:40.827115+00:00</updated><content type="html"><![CDATA[<p>在我们交换彼此个人信息的时候，我们通常会首先交换微博这样的弱社交联系方式，如果有进一步认识的想法，那可能会加一个微信号，以便之后聊天交流，如果再熟一点，可能就会交换电话号码。</p>
<p>到了今天，电话号码的使用频率已经越来越低，在不着急的情况下，更多人习惯于通过微信等软件联系对方。但电话号码仍然是最重要的个人标识之一，不仅仅是因为它的私密性，还因为实名制与电话号码，乃至于所有的社交网站的注册绑定在一起。</p>
<!---more--->
<p>有了电话号码，似乎就能够找到你的一切了？真的是这样吗，《纽约时报》今天发表了的一篇文章，表明在将自己的电话号码分享出去之后，究竟能获得多少个人信息。
<img src="https://i.loli.net/2019/08/20/37OyHu6ka4QN8P2.jpg" alt="cbeb4bccc4579ba6cbf7f62fb62665e.jpg" /></p>
<p>《纽约时报》表示，电话号码其实是一个比你的名字更强的个人标识，他们请到加利福尼亚州帕洛阿尔托 (Palo Alto) 的移动安全公司 Fyde 来演示当电话号码泄露时，同时泄露的有多少信息这个过程。</p>
<p>Fyde 的安全研究员 Emre Tezisci 来负责查询，它和文章作者从未说过话，之前也从未见过面，是完全彼此陌生的两个人。</p>
<p>之后 Emre Tezisci 把作者 Brian X. Chen 提供的电话号码输入了一个公共的数据库。很快，他就得到了一份相当完整详细的档案——包括姓名、出生日期、住址、缴纳的财产税以及家庭成员信息。</p>
<p>而从这一刻开始， Brian X. Chen 的隐私安全将会变得相当脆弱，安全员 Emre Tezisci 在掌握了这些信息后可以尝试通过回答安全问题去攻击他的某些账户，甚至可以去对他的家人进行钓鱼诈骗。当然，这么做是非法的。</p>
<p>那么，是不是刚才 Emre Tezisci 查询的数据库是某些外人难以查询的内部数据库呢？实际上只是一个每月收费 5 美元的白页数据库会员版，区别与查询企业性质的黄页，白页是专门用来查询个人信息的数据库。</p>
<p>根据获得一些线索， Emre Tezisci 进行了一次彻底的网络追踪，一个小时后， Brian X. Chen 的这些信息就遭到了曝光：</p>
<p>家庭住址，面积多少，价格以及房产税</p>
<p>过去十年公开发表的言论</p>
<p>父亲、母亲、姐姐以及阿姨的全名</p>
<p>过去的电话号码以及父母家的座机号码</p>
<p>以前拥有的一处房产记录以及抵押贷款记录</p>
<p>是否有犯罪前科</p>
<p>而通过这些信息，进一步进行攻击是有极大可能成功，比如回答「母亲的姓名」或者「以前的住址」来登入一些私密账户。</p>
<p>此外还可以利用这些信息去欺骗运营商的客服，以便将号码转移到一个新 SIM 卡上达到电话劫持的目的；</p>
<p>劫持了电话之后就可以进行更多的尝试，比如一些电话验证的账户；</p>
<p>还可以通过钓鱼信息对其家人进行诈骗尝试；</p>
<p>不停用钓鱼信息和机器人锁定占用电话；</p>
<p>尝试破解语音信箱；</p>
<p>……</p>
<p><img src="https://i.loli.net/2019/08/20/kaK39SJU6IQyxLt.jpg" alt="26f799d116400c4a9be3ceb9775beed.jpg" /></p>
<p>在所有信息绑定严重的信息化社会，这样的结果可以说是情理之中的必然。然而非法的犯罪活动毕竟还不算常态，更常见的是利用你的信息进行垃圾营销。你的个人信息会在各种营销公司之间反复流转，然后短信广告和骚扰电话将会不停地骚扰你的生活。</p>
<p>甚至有一些针对性的广告会时常围绕在你的短信收件箱和邮件中，而你可能还在惊讶这些广告为什么如此懂你，惊讶于大数据的神奇。</p>
<p>那么，什么时候电话才能确实发挥它本来的作用？</p>
<p>除了你的朋友同事对象打电话找你之外，基本只有银行对你进行密码和手机号码双重验证的时候它才发挥的证明你是你的作用，除此之外，用电话号码注册网站也好，或是公布出去也好，其实都是高风险的操作。</p>
<p>别寄望于那些科技巨头会对你的个人信息保护的好好的，实际上 Facebook 早就因为不当使用电话号码而受到审查。科技博客 Gizmodo 去年的一项研究发现，在 Facebook 的两步验证后，广告商可以匹配到 Facebook 的数据库以便进行个性化广告推荐，此外还有通过输入个人电话号码来查找用户资料的功能。</p>
<p><img src="https://i.loli.net/2019/08/20/L2If3pGKrVie5ER.jpg" alt="794873c0d74b3ea209387c1ad4213f6.jpg" /></p>
<p>在被曝光之后，Facebook 的发言人 Rochelle Nadhiri 表示输入电话号码查询个人资料的功能已经被移除了。</p>
<p>不过，当世界上最大的社交网络巨头都这样滥用的你的号码信息，还有公司可以信任吗？</p>
<p>这种滥用不仅在国外，在国内的情况甚至更加严重。甚至以前还有一个笑话讽刺此事，就是在哪个公司的账号注册就起该公司的名字，比如在腾讯注册就叫王腾讯，在网易注册就叫王网易，这样当你的信息被卖掉之后就知道是谁干的了。</p>
<p>当然这只是一个笑话，现在个人信息的准确程度这样的小伎俩是没有用的，你收到的那些股票、期货、楼盘、店铺电话都知道你是谁，甚至他们都不再用人工来打电话了，那些听起来温文尔雅的轻柔声音，背后其实都是机器人。</p>
<p>据美国反诈骗公司 YouMail 监测数据，2019 年 3 月，美国出现了 52.3 亿个机器人来电，创下最高纪录。</p>
<p>而收集你个人信息的方式更是防不胜防，比如有些优惠折扣和表带需要留下个人电话，比如你网购使用的物流快递公司，甚至是微博与朋友圈的一些「测试题」，都有可能导致的你的个人信息泄露。</p>
<p>而在这背后更是庞大的灰产黑市交易链条，从个人方面来说，一但你的信息泄露你对此几乎没有任何办法。对于我们个人来说，能做的就是尽量少泄露自己的电话号码，少给可疑应用授权以及平时嘱咐家人朋友提高防范意识，防止钓鱼诈骗。</p>
<p>今天，个人信息泄露已经成为一种常态，虽然便利换隐私是个老生常谈的说法，但有些信息的泄露只会带来无尽的骚扰。这让人麻木，也让人震惊。</p>
]]></content><link href="https://github.com/jaaleng/gitblog/issues/39"/><category term="存档"/><published>2024-07-21T12:16:50+00:00</published></entry><entry><id>https://github.com/jaaleng/gitblog/issues/37</id><title>带壳的栗子</title><updated>2024-07-25T14:03:40.979647+00:00</updated><content type="html"><![CDATA[<p>带壳的栗子Copyright © Kai Keisuke/Shutterstock)
<img src="https://pic.downk.cc/item/5fb26a10b18d627113c6fa1a.jpg" alt="" /></p>
]]></content><link href="https://github.com/jaaleng/gitblog/issues/37"/><category term="生活"/><published>2024-07-21T10:58:04+00:00</published></entry><entry><id>https://github.com/jaaleng/gitblog/issues/36</id><title>大提顿国家公园中的野牛，怀俄明州</title><updated>2024-07-25T14:03:41.160445+00:00</updated><content type="html"><![CDATA[<p>大提顿国家公园中的野牛，怀俄明州 ( Brian Evans/Getty Images)</p>
<p><img src="https://pic.downk.cc/item/5fa6a5761cd1bbb86bf59259.jpg" alt="" /></p>
]]></content><link href="https://github.com/jaaleng/gitblog/issues/36"/><category term="心情"/><published>2024-07-21T10:42:00+00:00</published></entry><entry><id>https://github.com/jaaleng/gitblog/issues/35</id><title>比岳飞还牛的两位抗金名将：一个病逝前线，一个被贬13年</title><updated>2024-07-25T14:03:41.297243+00:00</updated><content type="html"><![CDATA[<p>“靖康元年春正月，金人犯京师，军于城西北。”</p>
<h4>1</h4>
<p>靖康元年（1126年）正月，金兵长驱直入，攻占相州（今河南安阳），距离开封不过咫尺之遥。</p>
<p>宋徽宗内禅后，从小不爱嬉戏游玩、才能平平的老实人宋钦宗，从他老爸手中接过了皇位这个烫手山芋，终日惶恐，无法安心过新年。
宰相李纲给了他安全感。</p>
<p>城外战况紧急，李纲招募敢死之士2000人，身先士卒，与金人鏖战于京城西北。之后，刺血上书劝说宋徽宗退位的李纲，又担负起保卫京城的重任，还把打算弃城而逃的宋钦宗拉了回来。</p>
<p>宋钦宗听说金兵渡河，本来撒腿就要跑，禁军将士都备好鞍马，甚至把太庙供奉的皇帝牌位也请了出来，一行人在清晨时偷偷摸摸地整装待发。
李纲进宫见此情景，对将士们厉声说道：“尔等愿以死守宗庙乎？”
将士们不愿当逃兵，高喊：“我等愿意死守！不在此，将去何处？”
这仗不好打，却还有得打。</p>
<p>李纲入殿，对宋钦宗说：“陛下昨天跟臣说要留下，今天又要跑路，这是为何？六军将士的父母妻儿都在京城，不愿离去，万一中途失散，谁来当您的保镖？况且敌人的骑兵已经逼近，若他们知道陛下车驾出城未远，快马加鞭前去追赶，该如何抵挡？”</p>
<p>宋钦宗听到出城更危险，小心脏有点受不了，只好留在城中。但朝中主和派依旧畏金如虎，处处对李纲形成掣肘，还派人出使金营，以纳币、割地、送人质为条件，请金人退兵。</p>
<!---more--->
<p>▲李纲（1083年-1140年）</p>
<p>李纲身陷主和派围攻时，另一个主战派大臣宗泽也来到了开封。
不久后，在主和派的举荐下，宗泽被任命为“和议使”。临行前他对小伙伴们说：“我这一去，就不能活着回来了。”</p>
<p>众人感到诧异，问他这是为何。</p>
<p>宗泽正气凛然地回答道：“敌人若知悔改，带兵撤离自然是好事。否则，我怎么可能向金人卑躬屈膝，有辱使命呢！”</p>
<p>有人将此事报告给宋钦宗，主和派才知，这个使者根本就没想替朝廷议和，而是铁了心要和金人搏命，这不得谈崩了。趁着车马还没出发，宋钦宗赶紧把宗泽撤下来，改派他出知磁州（今河北磁县）。</p>
<p>李纲与宗泽，这两位铁骨铮铮的的主战派，在国家危难之际同时赶赴前线。
他们的命运从此与大宋一落千丈的国运交织在一起，余生陷入有心报国、无力回天的无尽愁苦之中。</p>
<p>▲宗泽（1060年-1128年）</p>
<h4>2</h4>
<p>金人兵临开封城下，李纲将城中兵力重新布防，命弓箭手猛射金兵，放火焚烧攻城云梯，等待各路勤王军队陆续到来。</p>
<p>城外，各路宋军集结，号称20万。城中军民士气大振，同仇敌忾，还有李纲主持大局，可北宋还是没有逃过灭亡的命运，甚至遭受了前所未有的耻辱。
南宋的朱熹评价靖康年间朝政时，用了这四个字——“无一是处”。</p>
<p>很多人常认为，宋钦宗就是个背黑锅的，如果没有他爹宋徽宗把国家折腾得乌烟瘴气，北宋朝廷也不会迅速崩溃。实际上，宋钦宗这个亡国之君，对北宋覆灭也有不少责任，是他自己把取胜的筹码全给赔进去了。</p>
<p>曾经有一个李纲在宋钦宗面前，他没有好好珍惜。</p>
<p>在指挥开封保卫战短短不到一年的时间里，李纲两度被贬，他提出的计策，宋钦宗不愿采纳，失利后却还要追究他的责任。</p>
<p>起初，李纲认为金人贪婪无厌，战斗力极强，宋军应该坚壁固守，等到金人食尽力疲时，再出兵收复失地。“纵其北归，半渡而击之”，这就是必胜之道。</p>
<p>但是，宋钦宗却一心想用20万大军速战速决，执意命各路军队出战，偷袭金营。结果，宋军劫寨失败，主和派把出师败绩的罪名推到李纲等主战派身上，李纲因此被罢免官职。</p>
<p>李纲指挥作战时，金人不敢贸然出击，听说李纲被罢官，他们当天就派出一支骑兵到城下耀武扬威，气焰嚣张。</p>
<p>城中宋朝臣民的表现比金人还要激烈，太学生陈东叫来上百名同学伏阙上书，掀起一场大规模抗议运动。闻风而来的军民多达十余万人，集结于宫门外为李纲伸冤，直言李纲是唯一能承担天下重任的人，主和派大臣尽是“庸缪不才，忌疾贤能”之辈。</p>
<p>愤怒的群众毁坏了宫门外的栏杆，甚至朝主和派大臣投掷瓦砾，之后还打死了几个宦官。当有人指责他们要挟天子时，太学生们高声答道：“以忠义胁天子，不逾于奸佞胁之乎？”</p>
<p>之后，宋钦宗急命李纲官复原职，并一起登上高楼与百姓见面，才渐渐平息众怒。</p>
<p>在这场北宋灭亡前夕的爱国请愿运动中，抗议者的思想高度可谓超前，他们不顾所谓的君臣大义，宁死也要支持忠心报国的李纲复职。这是一种真正的爱国精神。</p>
<p>但身处漩涡中心的李纲，也因此引起宋朝皇帝忌惮。</p>
<p>李纲复出后，再次整军备战，痛击金兵，形势对城外的金人愈发不利。胜利的天平一度向宋军倾斜，进退失据的金兵，终于在次月解围而去。</p>
<p>宋钦宗看金人走了，有点儿飘，又不听李纲的话，竟然还要对支持抗金的太学生下手。</p>
<p>在李纲复职次日，宋钦宗颁布命令，说：“士庶有以伏阙上书为名者，意在做乱，今后如更有似此之人，即与收捉，并从军法斩讫奏闻。”</p>
<p>这是说，今后再有群众抗议，直接处死。</p>
<p>主和派大臣趁机散布流言，说李纲早就有意鼓动太学生，威胁皇帝重用自己。在朝中奸佞小人的打压下，正义的声音再度被淹没。</p>
<p>当时开封流传着这样一句民谣：“城门闭，言路开；城门开，言路闭。”</p>
<p>北宋朝廷一片混乱，仅仅过了几个月，金兵就卷土重来，于靖康元年秋攻陷了坚守八个多月的军事重镇太原，又一次剑指汴京，阴霾笼罩在黄河两岸。
此时，李纲却已被贬出朝。他被宋钦宗派往河北、河东解围，实际上无兵无钱，战败后被贬到南方。李纲离京前为朝廷筹划的抗金之策，也被主和派全盘否定。</p>
<p>李纲前脚刚走，宋钦宗受投降派蛊惑，将他所征调的军队罢去一半，尤其是罢四川、福建、广东、荆湖诸路正规军与京西诸州的非正规军，取消钱粮犒赏的费用，完全就是“送人头”行为。</p>
<p>离京不过几天的李纲得知后大惊，连忙上书反对。其中说到，主和派认为四川等地路途遥远，但征发之诏四月就已下达，现在远方之兵都在路上，如果以寸纸之书让他们回去，朝廷如何取信于天下？臣担心日后再有号召，天下无应者矣！</p>
<p>果不其然，金兵再次兵临开封城下，偏远之地响应朝廷号召的勤王之兵寥寥无几。</p>
<h4>3</h4>
<p>宋廷不断派出使者求和，却无法抵挡金兵进军的步伐。金人根本没把屈辱求和的北宋君臣放在眼里，说：“待汝家议论定时，我已过河矣。”</p>
<p>另一边，早已看出议和并非救国之策的宗泽，正带领十几个老弱士卒前往磁州任职，那是抗金的第一线。一路上，临危不惧的宗泽写下了《早发》一诗：</p>
<p>繖幄垂垂马踏沙，水长山远路多花。</p>
<p>眼中形势胸中策，缓步徐行静不哗。</p>
<p>这一年，宗泽已年近七旬，他招募义勇，发动民众修缮城墙，制造兵器。磁州一带抗金形势一片大好，宗泽为此上书道：“邢、洺、磁、赵、相五州，各蓄精兵二万，敌攻一郡，则四郡皆应，是一郡之兵，常有十万人也。”
但朝廷仍然是主和派占了上风，宋钦宗派出宋徽宗第九子、康王赵构再度出使金营议和。</p>
<p>赵构路过磁州时，宗泽叩拜迎接，劝谏道：“金人不过是用花言巧语诱骗我们前去议和，他们的军队已经打过来了，再去金营还有什么可谈的，请康王不要去了！”</p>
<p>赵构很聪明，他也听说金兵已经渡河，不愿自投罗网，于是掉了个头，后来一边受宋钦宗册封，打着兵马大元帅的旗号聚集溃军，一边跑到济州（今山东巨野）安顿下来，不敢与金兵正面交锋。宗泽多次苦劝他直趋澶渊，收复失地，解京城之围，赵构却无动于衷。</p>
<p>宗泽只好孤军奋战，向开封进军。宗泽率军出征后，一路和金兵打了十三场仗，全部获胜，将士们毫不畏惧金兵强悍的战斗力。</p>
<p>国难当头，宗泽一面写信请赵构会师京城，一面联络其他宋军，继续向开封挺进。他鼓舞手下将士，说：“现在进退都是死，我们必须死里求生！”
李纲与宗泽的奋战，还是无法阻止汴京陷落。</p>
<p>宋钦宗向金人递上降书后，满城君臣百姓如羊入虎口，尽是悲泣之声。</p>
<p>靖康二年（1127年），金人纵
焚城，烧杀掳掠，挟持徽钦二帝、宗室、妃嫔、大臣等三千多人北归。
宗泽得知这一消息，立即率领大军抄近路赶到大名（今河北大名县），想联合各军过河堵住金兵的归路，将二帝抢回来。</p>
<p>可当他到达时，各路军队竟然没有一支前来勤王，宗泽孤掌难鸣，只好望河兴叹，眼见金人带着“战利品”远去。北宋俘虏到了北方苦寒之地，“男十存四，女十存七”，无数人惨遭蹂躏侮辱，倒毙路旁。
这，就是靖康之变。北宋，灭亡。</p>
<p>老当益壮的宗泽，深深感受到一种无力感，而这种不甘与悲愤，成为其短暂的抗金生涯中唯一的基调。</p>
<h4>4</h4>
<p>在济州吃瓜看戏的赵构成了大赢家。</p>
<p>21岁的赵构，从孟太后（北宋哲宗皇后）派出的使者手中接过刻有篆文“大宋受命之宝”的玉玺，即位称帝，改元建炎，重建政权，史称南宋。</p>
<p>宋高宗赵构为了树立威望，即位后不得不起用主战派的李纲为相。他还写了封信给受命回朝的李纲：“方今天下生民遭此劫难，只有阁下这样学穷天人、忠贯金石的大臣辅佐朕，才能符合苍生的期望。”</p>
<p>赵构的亲信黄潜善、汪伯彦对这一安排极为不满，这两位都是“无进攻之志”的主和派，且自以为对宋高宗有“攀附之劳”，怎么说也得讨个宰相当当。</p>
<p>黄、汪二人，成了李纲、宗泽抗金的阻碍，而他们背后的老板赵构，也是一个耳根子软的懦弱之徒。</p>
<p>建炎元年（1127年），李纲出任宰相后，为赵构呈上“议国是”等十事，认为当务之急是防御金人再次南侵。他与主和派势不两立，敢于当面与皇帝的宠臣黄、汪抬杠，这股忠直耿介的气度让他与宋高宗渐行渐远。</p>
<p>李纲前来行在拜见高宗时，赵构知道他跟主和派闹矛盾，就让黄潜善负责设宴款待，并由汪伯彦等人陪同，希望他们尽释前嫌，修复一下关系。没有什么是一顿饭不能解决的，如果有，那就两顿。</p>
<p>可是李纲不按套路出牌，他见过赵构后，上奏请辞此宴，直接回家，把黄潜善等朝中大臣直接晾在大门外，也不打声招呼。</p>
<p>汪、黄早已备好筵席，等了大半天也没见着李纲人影，得知真相后怒不可遏，从此玩了命整李纲。</p>
<p>赵构一即位，之前担任其副元帅的宗泽也前往拜见，向高宗陈述抗金大计，说到激动时不禁老泪纵横，在一旁的李纲也为之动容。</p>
<p>一天，李纲在朝见时与宗泽偶遇，有过一番谈话，他们谈及国事，为之心痛不已，也为抗金大业慷慨激昂。当时，开封府缺一名独当一面的大臣驻守，李纲就向高宗极力推荐宗泽：“绥复旧都，非宗泽不可。”</p>
<p>▲宗泽、李纲等主战派力主抗金，迎回二圣。</p>
<p>赵构早想着重用宗泽，李纲也欲留他共同主持大局，但是以黄潜善、汪伯彦为首的主和派大臣屡屡从中作梗。最后，高宗只是授宗泽以龙图阁学士、知襄阳府，让他去建设大后方。</p>
<p>李纲立马察觉此事不对劲，便一再奏请擢宗泽为开封府尹、东京留守，大力支持其对京城的防御。</p>
<p>这些“糟老头子”犟得很，赵构自知拗不过，只好同意。
孤独的宗泽，在主和派轻蔑的眼光中，来到那座已经没有皇帝的都城。
开封不久前惨遭金兵劫掠，盗贼蜂起，人心惶惶，城中残破不堪，“冻馁死者十五、六”，早已看不出一丝《清明上河图》中那盛世繁荣的气象。
同样孤立的李纲，在朝中不断受到黄、汪等党羽的攻击。
有人说李纲，“名浮于实，而有震主之威，不可以相。”还有人老调重弹，用之前北宋大臣的言论抨击他：“为金人所恶，不宜为相。”</p>
<h4>5</h4>
<p>李纲与宗泽有共同主张，他们一人在朝，一人在汴，艰难支撑起抗金的大旗。</p>
<p>他们都善于利用河北、河东等地民兵。</p>
<p>当时，各地义兵兴起，打着勤王的旗号，却各怀心思，难以统一调度。但朝廷眼中的这些“匪”“寇”兵力雄厚，是李纲与宗泽一心争取的对象。</p>
<p>淮南的杜用，山东的李昱，襄阳的李孝忠，都被李纲调兵遣将一一讨平，降者多达十余万，归于诸将帐下，听候调遣，构成一道横跨数州的防线，只待渡河讨伐金兵。</p>
<p>京西、淮南、两河一带的“草头王”们也在宗泽爱国精神的感召下，纷纷加入匡扶宋室的队伍。</p>
<p>濮州义军的首领王善，自称手下有数十万之众，兵车万乘，本来不给宗泽好脸色看，还想出兵占领汴京。</p>
<p>宗泽听闻此事，亲自前去劝降，单骑入营与王善相见，请他加入抗金大军，说：“朝廷正当危难之时，如果有一两位如你这样的人，岂还会有敌患？今日就是立功的好时机，机不可失啊。”</p>
<p>王善一看，宗泽年近七旬，还一心为国为民，极富诚意，对他佩服不已，二话不说，解甲归降。</p>
<p>寿春人丁进，江湖人称“丁一箭”，聚众数万人，听闻宗泽的威名，带兵前往京城近郊求见。</p>
<p>宗泽的部下都担心有诈，宗泽却说：“精诚所至，金石为开，何况是人呢？”
丁进到后，宗泽亲自接见，像对待老部下一样与他亲切交谈。丁进十分感动，当即请宗泽前去视察他的部队。宗泽毫不怀疑，第二天就去慰问了丁进的军队。</p>
<p>从此，丁进所部归入宗泽麾下，成为保卫汴京的一支生力军。如果发现队伍中有人怀有二心，丁进会果断地将其斩杀。</p>
<p>除此之外，还有外号“没角牛”的杨进、李贵、王大郎、王再兴等各自拥兵割据一方，宗泽晓以大义，将他们一一招降。</p>
<p>李、宗二人对主战派的同志，也都是知人善任。</p>
<p>李纲举荐了张所、傅亮等主战派，此二人分别被任命为河北路招抚使与河东路招抚使。</p>
<p>张所在北宋当过御史，宋朝向金朝割地求和时，他主张招募河北民兵救援京城，后来黄潜善被高宗重用后，他又上疏直言黄潜善奸邪误国，因此被贬到江州。这些主战派一个个都脾气火爆。</p>
<p>得到李纲提拔后，张所来到河北招揽豪杰，整顿军备。一个因越职言事而被逐出军营的青年，在此时来到河北投奔张所，后来归于宗泽帐下。
他，就是岳飞。</p>
<p>岳飞只是一个低级军官，敢于说真话，此前上书论事，惹祸上身。
他竟然谴责“黄潜善、汪伯彦辈不能承圣意恢复，奉车驾日益南，恐不足系中原之望”，还义正辞严地请高宗“亲率六军北渡，则将士作气，中原可复”。</p>
<p>这样一个刺头，深得宗泽器重。</p>
<p>有一次，岳飞触犯了军法，本来要严加处置。宗泽一见到他，交谈之后，发现他是一名不可多得的将才。</p>
<p>正值金人入侵汜水，宗泽给了岳飞将功补过的机会，让他带五百名骑兵作为先锋部队出战。</p>
<p>岳飞初出茅庐，就尽显军事奇才，在这次遭遇战中痛击金军。岳飞凯旋后，宗泽赦免了他的罪，并升他为统制，年轻的岳飞由此成名。</p>
<p>然而，李纲与宗泽，这两位最有威望的抗金大佬之间，却出现了一些裂痕。
宗泽抗金的思想，是主动进攻。南宋一建立，他就向宋高宗“乞兵十万往收复河北”。他招揽各地民兵，也是“用之以转战，而不用之以固守”。</p>
<p>李纲的计划却是以守为主，在坚守中原的同时，也要保护宋高宗安全，他建议高宗巡幸襄阳等地，而不要急着北上。所谓“待其来寇，则严守御以备之。”（李纲《奏议·议国是》）</p>
<p>宗泽与李纲在抗金计划上的分歧，似乎动摇了他们共同的主战立场。
君子和而不同，小人却寡廉鲜耻。李纲与宗泽的政敌，主和派的黄潜善、汪伯彦合作默契，在反对主战派的行动上保持高度一致。</p>
<h4>6</h4>
<p>黄潜善、汪伯彦的首要目标，就是扳倒李纲，进而把持朝政。</p>
<p>因为选择“巡幸”之地一事，宋高宗与李纲的君臣关系闹崩了。</p>
<p>赵构在战乱中即位，即便宗泽已经过去把他老家开封府“打扫”了一遍，他也迟迟不敢回家。李纲的战略是以守为攻，官家不敢回老家就不回了，那就去河南、荆襄之地巡幸，以表示不放弃中原之志</p>
<p>李纲的主张已经算是妥协，宋高宗却还不愿接受，没有最怂，只有更怂，想要继续南逃避难，更不可能北伐，迎回二帝。于是黄潜善、汪伯彦都出来拍马屁，提出巡幸东南以避敌的意见。</p>
<p>从此，宋高宗更加依赖黄、汪二人，有意疏远李纲。年轻气盛的他对执拗的李纲愈发不满，说：“李纲这个家伙，竟然把朕当小孩子看待！”</p>
<p>李纲不愿认输，坚称不可放弃中原，跑去东南躲避，上疏道：</p>
<p>自古中兴之主，起于西北，则足以据中原而有东南，起于东南，则不能以复中原而有西北。盖天下精兵健马皆在西北，一旦委中原而弃之，岂惟金人将乘间以扰内地；盗贼亦将蜂起为乱，跨州连邑，陛下虽欲还阙，不可得矣，况欲治兵胜敌以归二圣哉？</p>
<p>抗击金人，光复中原，迎回二圣，李纲的每一句话都踩中了赵构心中的雷。</p>
<p>▲宋高宗，1127-1162年在位。</p>
<p>到了建炎元年（1127年）八月，在汪、黄等人的攻讦下，李纲以“狂诞刚愎”、“设心为何，专制若此”等罪被罢相，前后上任仅75天，其规划的军政也几乎被废除。</p>
<p>黄、汪一党穷追不舍，接连上书弹劾，一直把李纲贬到了南方瘴疠之地——海南岛。</p>
<p>李纲罢相后，之前在靖康围城时帮助过他的太学生陈东再次出面力挺，三次上书，请求宋高宗不要罢免李纲，指出黄、汪不可信，还要高宗“还汴、治兵、亲征、迎请二帝”。</p>
<p>这一次，皇权露出了尖锐的獠牙，宋高宗听到陈东等人为李纲求情，还敢教训自己，甚至质疑自己皇位的合法性，他果断下令，将陈东等上书言事的太学生处死。有学者认为，陈东直到死，也未与李纲有一面之交。
李纲罢相，意味着主战派在朝中失去话语权。</p>
<p>主和派汪、黄屡屡从中阻挠抗金，宋高宗也不再受制于人，彻底放飞自我，在罢免李纲不久后就逃到了扬州。</p>
<p>如此一来，最难熬的，就是宗泽。</p>
<h4>7</h4>
<p>建炎二年（1128年）春，留守东京的宗泽已经招抚各地义军百万之众，且积蓄了半年军粮，他多次上书痛斥黄、汪一党懦弱无能，请皇帝还京掌国，却一次次石沉大海。</p>
<p>宗泽知道赵构“恐金症”晚期，可能不相信他的话，还在奏疏中诚恳地说：“臣若有毫发误国大计，臣有一子五孙，甘被诛戮。”</p>
<p>在一次与金兵的交战中，宗泽擒获了辽国旧将王策，亲自为其松绑，请他坐于堂上。</p>
<p>两人都与金人有国仇，宗泽对他说：“契丹本来是我大宋兄弟之国，如今女真辱我主，又将你们灭国，我们应当同心协力，一雪前耻啊！”</p>
<p>王策听宗泽这么说，感动得稀里哗啦，也不计较北宋之前背信弃义，就将金人的虚实全部告知宗泽，进一步坚定了宗泽抗金的决心。</p>
<p>宗泽打听到两河州县金军兵力空虚，前后上疏二十多次，恳请赵构“早还华阙”，发兵北伐。宗泽的文书如雪片般飞来，可赵构都不为所动。</p>
<p>一直拖到当年七月，宋高宗仍然没有表态，宗泽的部队迟迟无法进军。</p>
<p>宗泽望眼欲穿，期盼着皇帝移驾开封，希望却如此渺茫。</p>
<p>他病倒了。</p>
<p>年迈的宗泽忧愤成疾，背上生疽，从此一病不起。</p>
<p>当将领们在榻前问候时，他支撑着坐起来，说：“我本来没病，只因二帝蒙尘，心生忧愤。希望诸位能够奋力歼敌，那样我就死而无憾了。”</p>
<p>众将听罢，泪流不止，表示一定不会辜负宗泽的嘱托。</p>
<p>在生命的最后时光里，宗泽反复悲吟杜甫写诸葛亮的诗句“出师未捷身先死，长使英雄泪满襟”，没有一句话谈及家事。</p>
<p>临终前，他大呼三声“渡河”，悲愤去世。</p>
<p>宗泽的儿子宗颖，将其遗表上呈高宗，表中最后几句写道：“属臣之子，记臣之言，力请銮舆，亟还京阙，大震雷霆之怒，出民水火之中。夙荷君恩，敢忘尸谏！”</p>
<p>不知宋高宗读罢，心中是何感受。</p>
<p>宗泽的理想，随他消逝在东京梦华之中。李纲却在失意的烦恼之中，又艰难地活了13年。每次宋金议和，这个老愤青都要上书把主和派痛骂一顿。</p>
<p>绍兴八年（1138年），主和派的秦桧入朝执政，南宋再一次与金朝议和。
早已远离中枢的李纲虽然失去存在感，但还是投了反对票，上书高宗，言辞激烈，其中说到，金人毁我宗庙，迫害二帝，他们是我们的仇敌，我们是他们的心腹大患，岂有讲和的道理？</p>
<p>李纲直接怼宋高宗，责问他：“何况现在还有半壁天下，臣民都拥戴大宋，如果陛下与有识之士一起谋划，还能有所作为。怎可忘记祖宗的基业和百姓的期望，不加考虑就急于向金人屈服，希望苟延性命于旦夕之间呢？”</p>
<p>天底下也没几个人敢这么跟皇帝说话了。</p>
<p>当时主和的大臣认为李纲忤逆，请求将其治罪。高宗却为李纲开脱，说：“大臣当如此矣。”</p>
<p>他告诉皇帝，老臣迂腐，不善于明哲保身，总是上书烦扰陛下，这几年，臣频繁反复地受提拔、贬斥，不仅有损于陛下知人善任的英明，也有损于国体。</p>
<p>这番话，好像还有几分讽刺的意思。昨天的你对我爱答不理，今天的我让你高攀不起。</p>
<p>高宗看罢，也不愿强求。</p>
<p>又过了一年，58岁的李纲也走到了生命的尽头。</p>
<p>李纲一生六起六落，自罢相后漂泊四方，壮志难酬。晚年的他屡遭贬谪，身体日衰，以“病牛”自喻，曾在谪居鄂州期间，写了一首《病牛》诗：</p>
<p>耕犁千亩实千箱，力尽筋疲谁复伤？</p>
<p>但得众生皆得饱，不辞羸病卧残阳。</p>
<p>任何一个时代，都不缺李纲、宗泽这样的硬骨头。</p>
<p>可又有多少时代，容得下这样的硬骨头？</p>
<p>全文完，感谢您的耐心阅读，顺手点个“在看”让我知道您在看~</p>
<p>参考文献：</p>
<p>[宋] 李心传：《建炎以来系年要录》，上海古籍出版社，2008年</p>
<p>[元] 脱脱：《宋史》，中华书局，1985年</p>
<p>[清] 毕沅：《续资治通鉴》，中华书局，1999年</p>
<p>何忠礼：《南宋全史》，上海古籍出版社，2011年</p>
<p>[日] 寺地遵：《南宋初期政治史研究》，复旦大学出版社，2016年</p>
<p>白晓霞：《南渡三宰相研究（1127-1138）》，暨南大学博士论文2006年</p>
]]></content><link href="https://github.com/jaaleng/gitblog/issues/35"/><category term="存档"/><category term="生活"/><published>2024-07-21T10:41:18+00:00</published></entry><entry><id>https://github.com/jaaleng/gitblog/issues/34</id><title>奥地利圣珀尔滕</title><updated>2024-07-25T14:03:41.498740+00:00</updated><content type="html"><![CDATA[<p>田里的拖拉机和装载着卷心菜的拖车</p>
<p><img src="https://pic.downk.cc/item/5f898f651cd1bbb86ba98ae4.jpg" alt="" /></p>
]]></content><link href="https://github.com/jaaleng/gitblog/issues/34"/><category term="心情"/><published>2024-07-21T10:40:12+00:00</published></entry><entry><id>https://github.com/jaaleng/gitblog/issues/33</id><title>阿尔塞多火山上的象龟</title><updated>2024-07-25T14:03:41.653215+00:00</updated><content type="html"><![CDATA[<p>阿尔塞多火山上的象龟，加拉帕戈斯群岛 ( Tui De Roy/Minden Pictures)</p>
<p><img src="https://i.loli.net/2019/07/31/5d418c3d51d2f37038.jpg" alt="3d469f43d838acbbf6facbdf292f269.jpg" /></p>
]]></content><link href="https://github.com/jaaleng/gitblog/issues/33"/><category term="心情"/><published>2024-07-21T10:39:28+00:00</published></entry><entry><id>https://github.com/jaaleng/gitblog/issues/32</id><title>Telegram语音聊天2.0：频道、数以百万的听众、语音聊天录制、管理员工具</title><updated>2024-07-25T14:03:41.806941+00:00</updated><content type="html"><![CDATA[<p>Telegram iOS &amp; Android v7.6.0
Telegram Desktop v2.7.0</p>
<p>语音聊天2.0：频道、数以百万的听众、语音聊天录制、管理员工具。</p>
<p>● 同时共存数以百万的听众
在群组和频道中开始无限制的语音聊天，可同时由数百万人收听。</p>
<p>● 语音聊天录制
可录制语音聊天，并稍后在频道中分享或发布。
从标题旁的红点可以看到聊天正在录制的标识。</p>
<p>● 改进的参与者列表
从参与者列表中直接看到用户的个人简介。
若您想发言，可以举手告知管理员。</p>
<p>● 组织者的管理工具
为听众或发言者创建单独的语音聊天邀请链接。
更改您的语音聊天的标题，让听众了解当前的话题。
通过您的个人频道的身份来加入某频道的语音聊天，以隐藏你的私人账号。
<img src="https://img.imgdb.cn/item/605888aa8322e6675c9c3fe7.jpg" alt="" /></p>
<p>本次更新详细内容：
<a href="https://telegram.org/blog/voice-chats-on-steroids">https://telegram.org/blog/voice-chats-on-steroids</a></p>
]]></content><link href="https://github.com/jaaleng/gitblog/issues/32"/><category term="存档"/><published>2024-07-21T10:38:38+00:00</published></entry><entry><id>https://github.com/jaaleng/gitblog/issues/31</id><title>Telegram警惕假冒官方的双向限制解除机器人</title><updated>2024-07-25T14:03:41.960970+00:00</updated><content type="html"><![CDATA[<p><img src="https://www.hualigs.cn/image/604762054175e.jpg" alt="" /></p>
<p>据群友反馈，有一个假冒官方的双向限制解除机器人名为&quot;双向限制解除&quot;，用户名 @shuangxiangbot，其简介为&quot;官方自助解除双向通知：需要解除双向的用户将双向截图发给我后为您免费领取美国手机号解除双向限制！&quot;。</p>
<p>此机器人会要求您提供截图并且提供美国手机号用以换绑，但是这么做会增加您的风险，一旦您账号绑定了他提供的手机号，且未设置两步验证密码（点此查看两步验证密码设置方法），那么对方可以在其他客户端登录您的帐号，这不仅会泄露您的非加密私聊以及群聊，还可能被用于发送广告等恶意行为而导致被 Telegram 官方处罚，同时对方还可以申请注销您的账号。据群友的反馈，该机器人还会威胁注销您的账号，如图所示（由群友提供），只要您未更换其提供的手机号，那么他没有权力也没有能力强制注销你的账号。</p>
<p>提醒各位用户，若您遇到双向联系人限制，请勿轻信此类非官方机器人。</p>
<ul>
<li>更新1 于 2021.03.09 10:31</li>
<li>
</li>
</ul>
<p>由于此类机器人不能直接举报，可以先诱导其说出仿冒官方身份的言论或类似的诈骗/欺骗性言论，然后对该消息进行举报。</p>
]]></content><link href="https://github.com/jaaleng/gitblog/issues/31"/><category term="生活"/><published>2024-07-21T10:37:47+00:00</published></entry><entry><id>https://github.com/jaaleng/gitblog/issues/30</id><title>重新安装了系统，又折腾了一回hexo</title><updated>2024-07-25T14:03:42.131522+00:00</updated><content type="html"><![CDATA[<h4>重新安装了电脑系统</h4>
<p>然后就是重新折腾hexo，安装noje.js,gir,再调试一晚上又没了。</p>
<h4>又复习了一遍</h4>
<p>又复习了一遍，那后把主题折腾了一下，原来的NEXT主题怎么装都有问题，升级还要改文件都没用，只好用这个主题了。</p>
<p><img src="https://i.loli.net/2020/09/05/oPt3uACVKDGLZwW.jpg" alt="OIP.jpg" /></p>
<h4>这回支撑的久点</h4>
<p>真是没时间折腾了。希望用的时间长点。</p>
]]></content><link href="https://github.com/jaaleng/gitblog/issues/30"/><category term="生活"/><category term="心情"/><published>2024-07-21T10:35:52+00:00</published></entry><entry><id>https://github.com/jaaleng/gitblog/issues/29</id><title>正在吸食花蜜的蜂鸟鹰蛾</title><updated>2024-07-25T14:03:42.289790+00:00</updated><content type="html"><![CDATA[<p>一只正在吸食花蜜的蜂鸟鹰蛾，意大利撒丁岛 </p>
<p>( patriziomartorana/iStock/Getty Images Plus)</p>
<p><img src="https://i.loli.net/2019/07/23/5d370bbaeb2a515840.jpg" alt="2019072301.jpg" /></p>
<p><img src="https://i.loli.net/2019/07/23/5d370bbbca6f434268.jpg" alt="2019072302.jpg" /></p>
]]></content><link href="https://github.com/jaaleng/gitblog/issues/29"/><category term="2024"/><category term="心情"/><published>2024-07-21T10:34:25+00:00</published></entry><entry><id>https://github.com/jaaleng/gitblog/issues/28</id><title>在佛蒙特，用无人机捕捉未见之美</title><updated>2024-07-25T14:03:42.444015+00:00</updated><content type="html"><![CDATA[<p><img src="https://i.loli.net/2020/07/21/v9rWwedjmz2KpHI.jpg" alt="1.jpg" /></p>
<p>从小，我就爱从飞机的椭圆形窗户往外看，幻想着下面抽象的几何图案。</p>
<p>飞机把我们从一个地方运到另一个地方，从一个国家到另一个国家，从平视到鸟瞰。高瞻远瞩，熟悉的景观呈现出概念性的特质；看到隐藏的图案，让我们得到新的视角。</p>
<p>我是一名有着20多年经验的自由摄影师，走遍佛蒙特州的山山水水，拍摄肖像，给该州的标志性景观留影。</p>
<p>透视——连同光线、色彩与时机，构成摄影的基本元素，我一直在寻找新的方式来改变我的视觉。直到几年前，我的办法是租飞机创作航拍照片，心里只能巴望有个好天气和得力的飞行员。现在，我用上了无人机。</p>
<p>当然，这种方法也是有利有弊。根据经验，透过遥控镜头虚拟地俯视地面，跟真地飞到天上还不完全一样。但我不想太依赖他人，而且这样也更环保。（还更加方便；准备5分钟，我就能让我的大疆Mavic 2 Pro无人机升空）</p>
<!---more--->
<p>克拉伦登的乡间公路、玉米田和干草地。
对于静物摄影师来说，使用无人机是自然而然的事情。在阴沉多云的日子里，我可以来到世界的上方，创造出色彩鲜艳的鸟瞰照。而在光线充足的天气里，我又能捕捉到孤树在农田里投下的长长阴影。</p>
<p><img src="https://i.loli.net/2020/07/21/6ZXuW7iYUoM5Kz4.jpg" alt="1.jpg" /></p>
<p>康沃尔苹果园里的新下的雪。
为了获取灵感，我经常品味摄影师阿尔弗雷德·斯蒂格利茨(Alfred Stieglitz)名为《对等》(Equivalents)的作品。这个抽象系列摄于上世纪二三十年代，对云朵的研究虚虚实实，提供了一个充满抽象和隐喻的世界。我还受到米诺·怀特(Minor White)的影响，这位摄影师吸收并发扬了斯蒂格利茨的一些原则。</p>
<p><img src="https://i.loli.net/2020/07/21/LTBvWNompsI8Pl4.jpg" alt="1.jpg" /></p>
<p>我的大部分无人机照片都是在我位于佛蒙特州尚普兰山谷的家周围拍摄的。（这个地区因众多的农场和养蜂场而被称为牛奶与蜜之地）。但有时，我也会去更远的地方冒险。</p>
<p>米德尔伯里学院，一名在操场跑道上锻炼的女子。
当来到熟悉的风景上方时，会带来一种强烈的发现的快感。虽然放飞无人机的地形是我所熟知的，但很少能预测最后得到怎样的构图。我也不知道会拍到怎样的东西。</p>
<p><img src="https://i.loli.net/2020/07/21/9ZtyF8dl1qQVvLa.jpg" alt="1.jpg" /></p>
<p>不伦瑞克西尔维奥-康特国家鱼类和野生动物保护区里的努尔赫根河。
有一次，我开车穿过梅塔维山谷，牧歌般的环境点缀着小镇和奶牛场，我把车停在一块玉米地旁边的公路上，让无人机飞起来——结果发现了一个美丽的旧谷仓，屋顶铺着石板，而在地面，它藏匿在我的视线之外。</p>
<p>鲁珀特的一个旧谷仓，周围的玉米田将它藏匿起来，空中方得一现。
对于任何艺术家来说，寻找持续不断的创作灵感来源都是一个挑战，空中摄影丰富了我的作品。不过，最重要的是，对我来说，无人机摄影已经成为了一种日常习惯——给人的感觉经常就像是一种视觉冥想。</p>
<p>Caleb Kenna是一名常驻佛蒙特州米德尔伯里的摄影师，也是获得美国联邦航空管理局(FAA)认证的无人机驾驶员。</p>
]]></content><link href="https://github.com/jaaleng/gitblog/issues/28"/><category term="生活"/><published>2024-07-21T10:33:47+00:00</published></entry><entry><id>https://github.com/jaaleng/gitblog/issues/27</id><title>Github上优秀的Java项目</title><updated>2024-07-25T14:03:42.615676+00:00</updated><content type="html"><![CDATA[<p>大家都知道 Github 是一个程序员福地，这里有各种厉害的开源框架、软件或者教程。这些东西对于我们学习和进步有着莫大的进步，所以我有了这个将 Github 上非常棒的 Java 开源项目整理下来的想法。我会按照几个维度对项目进行分类，以便大家查阅。当然，如果你觉得不错的话，欢迎给本项目点个 Star。我会用我的业余时间持续完善这份名单，谢谢 。</p>
<p>欢迎大家推荐自己觉得不错的 Java 项目，下面项目的排序很大程度是根据当前项目的 Star 数量。</p>
<p>如果有码云上比较好的项目的话，我也会推荐到这里来！另外，我也会推荐少部分过于优秀但是非开源的优质 Java 项目。</p>
<p>项目地址：</p>
<p><a class="LinkCard LinkCard--noImage" href="https://link.zhihu.com/?target=https%3A//github.com/Snailclimb/awesome-java" target="_blank" data-draft-node="block" data-draft-type="link-card" data-za-detail-view-id="172"><span class="LinkCard-content"><span class="LinkCard-text"><span class="LinkCard-title" data-text="true">https://github.com/Snailclimb/awesome-java<span class="LinkCard-meta">​github.com</span></span></span></span></a></p>
<h2><strong>教程</strong></h2>
<h3><strong>Java</strong></h3>
<ol>
<li><strong><a class=" wrap external" href="https://link.zhihu.com/?target=https%3A//github.com/Snailclimb/JavaGuide" rel="nofollow noreferrer" target="_blank" data-za-detail-view-id="1043">JavaGuide</a></strong>&nbsp;:【Java 学习+面试指南】 一份涵盖大部分 Java 程序员所需要掌握的核心知识。</li>
<li><strong><a class=" wrap external" href="https://link.zhihu.com/?target=https%3A//github.com/CyC2018/CS-Notes" rel="nofollow noreferrer" target="_blank" data-za-detail-view-id="1043">CS-Notes</a></strong>&nbsp;：技术面试必备基础知识、Leetcode 题解、后端面试、Java 面试、春招、秋招、操作系统、计算机网络、系统设计。</li>
<li><strong><a class=" wrap external" href="https://link.zhihu.com/?target=https%3A//github.com/doocs/advanced-java" rel="nofollow noreferrer" target="_blank" data-za-detail-view-id="1043">advanced-java</a></strong>&nbsp;:互联网 Java 工程师进阶知识完全扫盲：涵盖高并发、分布式、高可用、微服务、海量数据处理等领域知识。</li>
<li><strong><a class=" wrap external" href="https://link.zhihu.com/?target=https%3A//github.com/qiurunze123/miaosha" rel="nofollow noreferrer" target="_blank" data-za-detail-view-id="1043">miaosha</a></strong>&nbsp;： 秒杀系统设计与实现.互联网工程师进阶与分析。</li>
<li><strong><a class=" wrap external" href="https://link.zhihu.com/?target=https%3A//github.com/xingshaocheng/architect-awesome" rel="nofollow noreferrer" target="_blank" data-za-detail-view-id="1043">architect-awesome</a></strong>&nbsp;：后端架构师技术图谱。</li>
<li><strong><a class=" wrap external" href="https://link.zhihu.com/?target=https%3A//github.com/hollischuang/toBeTopJavaer" rel="nofollow noreferrer" target="_blank" data-za-detail-view-id="1043">toBeTopJavaer</a></strong>&nbsp;：Java 工程师成神之路 。</li>
<li><strong><a class=" wrap external" href="https://link.zhihu.com/?target=https%3A//github.com/eugenp/tutorials" rel="nofollow noreferrer" target="_blank" data-za-detail-view-id="1043">tutorials</a></strong>：该项目是一系列小而专注的教程 - 每个教程都涵盖 Java 生态系统中单一且定义明确的开发领域。 当然，它们的重点是 Spring Framework - Spring，Spring Boot 和 Spring Securiyt。 除了 Spring 之外，还有以下技术：核心 Java，Jackson，HttpClient，Guava。</li>
<li><strong><a class=" wrap external" href="https://link.zhihu.com/?target=https%3A//github.com/crossoverJie/JCSprout" rel="nofollow noreferrer" target="_blank" data-za-detail-view-id="1043">JCSprout</a></strong>&nbsp;:处于萌芽阶段的 Java 核心知识库。</li>
<li><strong><a class=" wrap external" href="https://link.zhihu.com/?target=https%3A//github.com/AobingJava/JavaFamily" rel="nofollow noreferrer" target="_blank" data-za-detail-view-id="1043">JavaFamily</a></strong>&nbsp;：【互联网一线大厂面试+学习指南】进阶知识完全扫盲。</li>
<li><strong><a class=" wrap external" href="https://link.zhihu.com/?target=https%3A//github.com/javagrowing/JGrowing" rel="nofollow noreferrer" target="_blank" data-za-detail-view-id="1043">JGrowing</a></strong>&nbsp;：Java is Growing up but not only Java。Java 成长路线，但学到不仅仅是 Java。</li>
</ol>
<h3><strong>数据结构/算法</strong></h3>
<ol>
<li><strong><a class=" wrap external" href="https://link.zhihu.com/?target=https%3A//github.com/MisterBooo/LeetCodeAnimation" rel="nofollow noreferrer" target="_blank" data-za-detail-view-id="1043">LeetCodeAnimation</a></strong>&nbsp;:Demonstrate all the questions on LeetCode in the form of animation.（用动画的形式呈现解 LeetCode 题目的思路）。</li>
<li><strong><a class=" wrap external" href="https://link.zhihu.com/?target=https%3A//github.com/TheAlgorithms/Java" rel="nofollow noreferrer" target="_blank" data-za-detail-view-id="1043">TheAlgorithms-Java</a></strong>&nbsp;:All Algorithms implemented in Java。</li>
</ol>
<h3><strong>SpringBoot</strong></h3>
<ol>
<li><strong><a class=" wrap external" href="https://link.zhihu.com/?target=https%3A//github.com/Snailclimb/springboot-guide" rel="nofollow noreferrer" target="_blank" data-za-detail-view-id="1043">springboot-guide</a></strong>&nbsp;：SpringBoot 核心知识点总结。 基于 Spring Boot 2.19+。</li>
<li><strong><a class=" wrap external" href="https://link.zhihu.com/?target=https%3A//github.com/wuyouzhuguli/SpringAll" rel="nofollow noreferrer" target="_blank" data-za-detail-view-id="1043">SpringAll</a></strong>&nbsp;：循序渐进，学习 Spring Boot、Spring Boot &amp; Shiro、Spring Cloud、Spring Security &amp; Spring Security OAuth2，博客 Spring 系列源码。</li>
<li><strong><a class=" wrap external" href="https://link.zhihu.com/?target=https%3A//github.com/JeffLi1993/springboot-learning-example" rel="nofollow noreferrer" target="_blank" data-za-detail-view-id="1043">springboot-learning-example</a></strong>&nbsp;：Spring Boot 实践学习案例，是 Spring Boot 初学者及核心技术巩固的最佳实践。</li>
<li><strong><a class=" wrap external" href="https://link.zhihu.com/?target=https%3A//github.com/xkcoding/spring-boot-demo" rel="nofollow noreferrer" target="_blank" data-za-detail-view-id="1043">spring-boot-demo</a></strong>&nbsp;：spring boot demo 是一个用来深度学习并实战 spring boot 的项目，目前总共包含 63 个集成 demo，已经完成 52 个。</li>
<li><strong><a class=" wrap external" href="https://link.zhihu.com/?target=https%3A//github.com/YunaiV/SpringBoot-Labs" rel="nofollow noreferrer" target="_blank" data-za-detail-view-id="1043">SpringBoot-Labs</a></strong>&nbsp;：Spring Boot 系列教程。</li>
</ol>
<h3><strong>SpringCloud</strong></h3>
<ol>
<li><strong><a class=" wrap external" href="https://link.zhihu.com/?target=https%3A//github.com/forezp/SpringCloudLearning" rel="nofollow noreferrer" target="_blank" data-za-detail-view-id="1043">SpringCloudLearning</a></strong>&nbsp;: 方志朋的《史上最简单的 Spring Cloud 教程源码》。</li>
<li><strong><a class=" wrap external" href="https://link.zhihu.com/?target=https%3A//github.com/dyc87112/SpringCloud-Learning" rel="nofollow noreferrer" target="_blank" data-za-detail-view-id="1043">SpringCloud-Learning</a></strong>&nbsp;: Spring Cloud 基础教程，持续连载更新中。</li>
<li><strong><a class=" wrap external" href="https://link.zhihu.com/?target=https%3A//github.com/yinjihuan/spring-cloud" rel="nofollow noreferrer" target="_blank" data-za-detail-view-id="1043">spring-cloud</a></strong>&nbsp;： 《Spring Cloud 微服务-全栈技术与案例解析》和《Spring Cloud 微服务 入门 实战与进阶》配套源码。</li>
<li><strong><a class=" wrap external" href="https://link.zhihu.com/?target=https%3A//github.com/ityouknow/spring-cloud-examples" rel="nofollow noreferrer" target="_blank" data-za-detail-view-id="1043">spring-cloud-examples</a></strong>&nbsp;：Spring Cloud 学习案例，服务发现、服务治理、链路追踪、服务监控等 （基本没更新了，Spring Cloud 比较老了）。</li>
<li><strong><a class=" wrap external" href="https://link.zhihu.com/?target=https%3A//github.com/zhoutaoo/SpringCloud" rel="nofollow noreferrer" target="_blank" data-za-detail-view-id="1043">SpringCloud</a></strong>&nbsp;：基于 SpringCloud2.1 的微服务开发脚手架，整合了 spring-security-oauth2、nacos、feign、sentinel、springcloud-gateway 等。服务治理方面引入 elasticsearch、skywalking、springboot-admin、zipkin 等，让项目开发快速进入业务开发，而不需过多时间花费在架构搭建上。</li>
</ol>
<h3><strong>大数据</strong></h3>
<ol>
<li><strong><a class=" wrap external" href="https://link.zhihu.com/?target=https%3A//github.com/heibaiying/BigData-Notes" rel="nofollow noreferrer" target="_blank" data-za-detail-view-id="1043">BigData-Notes</a></strong>&nbsp;:大数据入门指南 ⭐️。</li>
<li><strong><a class=" wrap external" href="https://link.zhihu.com/?target=https%3A//github.com/zhisheng17/flink-learning" rel="nofollow noreferrer" target="_blank" data-za-detail-view-id="1043">flink-learning</a></strong>&nbsp;：含 Flink 入门、概念、原理、实战、性能调优、源码解析等内容。</li>
</ol>
<h3><strong>设计模式</strong></h3>
<ol>
<li><strong><a class=" wrap external" href="https://link.zhihu.com/?target=https%3A//github.com/iluwatar/java-design-patterns" rel="nofollow noreferrer" target="_blank" data-za-detail-view-id="1043">java-design-patterns</a></strong>&nbsp;： Design patterns implemented in Java。</li>
</ol>
<h2><strong>实战项目</strong></h2>
<ol>
<li><strong><a class=" wrap external" href="https://link.zhihu.com/?target=https%3A//github.com/macrozheng/mall" rel="nofollow noreferrer" target="_blank" data-za-detail-view-id="1043">mall</a></strong>&nbsp;：mall 项目是一套电商系统，包括前台商城系统及后台管理系统，基于 SpringBoot+MyBatis 实现。</li>
<li><strong><a class=" wrap external" href="https://link.zhihu.com/?target=https%3A//github.com/macrozheng/mall-swarm" rel="nofollow noreferrer" target="_blank" data-za-detail-view-id="1043">mall-swarm</a></strong>&nbsp;: mall-swarm 是一套微服务商城系统，采用了 Spring Cloud Greenwich、Spring Boot 2、MyBatis、Docker、Elasticsearch 等核心技术，同时提供了基于 Vue 的管理后台方便快速搭建系统。</li>
<li><strong><a class=" wrap external" href="https://link.zhihu.com/?target=https%3A//github.com/wxiaoqi/Spring-Cloud-Admin" rel="nofollow noreferrer" target="_blank" data-za-detail-view-id="1043">Spring-Cloud-Admin</a></strong>&nbsp;：Cloud-Admin 是国内首个基于 Spring Cloud 微服务化开发平台，具有统一授权、认证后台管理系统，其中包含具备用户管理、资源权限管理、网关 API 管理等多个模块，支持多业务系统并行开发，可以作为后端服务的开发脚手架。代码简洁，架构清晰，适合学习和直接项目中使用。核心技术采用 Spring Boot2 以及 Spring Cloud Gateway 相关核心组件，前端采用 vue-element-admin 组件。</li>
<li><strong><a class=" wrap external" href="https://link.zhihu.com/?target=https%3A//gitee.com/log4j/pig" rel="nofollow noreferrer" target="_blank" data-za-detail-view-id="1043">pig</a></strong>：（gitee）基于 Spring Boot 2.2、 Spring Cloud Hoxton &amp; Alibaba、 OAuth2 的 RBAC 权限管理系统。</li>
<li><strong><a class=" wrap external" href="https://link.zhihu.com/?target=https%3A//github.com/linlinjava/litemall" rel="nofollow noreferrer" target="_blank" data-za-detail-view-id="1043">litemall</a></strong>&nbsp;： 又一个小商城。litemall = Spring Boot 后端 + Vue 管理员前端 + 微信小程序用户前端 + Vue 用户移动端。</li>
<li><strong><a class=" wrap external" href="https://link.zhihu.com/?target=https%3A//github.com/lenve/vhr" rel="nofollow noreferrer" target="_blank" data-za-detail-view-id="1043">vhr</a></strong>&nbsp;：微人事是一个前后端分离的人力资源管理系统，项目采用 SpringBoot+Vue 开发。</li>
<li><strong><a class=" wrap external" href="https://link.zhihu.com/?target=https%3A//github.com/wuyouzhuguli/FEBS-Shiro" rel="nofollow noreferrer" target="_blank" data-za-detail-view-id="1043">FEBS-Shiro</a></strong>&nbsp;：Spring Boot 2.1.3，Shiro1.4.0 &amp; Layui 2.5.4 权限管理系统。</li>
</ol>
<h2><strong>系统设计</strong></h2>
<h3><strong>微服务/分布式</strong></h3>
<h3><strong>基础框架</strong></h3>
<ol>
<li><strong><a class=" wrap external" href="https://link.zhihu.com/?target=https%3A//github.com/spring-projects/spring-boot" rel="nofollow noreferrer" target="_blank" data-za-detail-view-id="1043">spring-boot</a></strong>&nbsp;：Spring Boot 可以轻松创建独立的生产级基于 Spring 的应用程序,内置 web 服务器让你可以像运行普通 Java 程序一样运行项目。另外，大部分 Spring Boot 项目只需要少量的配置即可，这有别于 Spring 的重配置。</li>
<li><strong><a class=" wrap external" href="https://link.zhihu.com/?target=https%3A//github.com/alibaba/spring-cloud-alibaba" rel="nofollow noreferrer" target="_blank" data-za-detail-view-id="1043">spring-cloud-alibaba</a></strong>&nbsp;: Spring Cloud Alibaba 致力于提供微服务开发的一站式解决方案。此项目包含开发分布式应用微服务的必需组件，方便开发者通过 Spring Cloud 编程模型轻松使用这些组件来开发分布式应用服务。</li>
<li><strong><a class=" wrap external" href="https://link.zhihu.com/?target=https%3A//github.com/spring-cloud/spring-cloud-kubernetes" rel="nofollow noreferrer" target="_blank" data-za-detail-view-id="1043">spring-cloud-kubernetes</a></strong>&nbsp;： Kubernetes 集成 Spring Cloud Discovery Client, Configuration, etc&hellip;。</li>
</ol>
<h3><strong>Spring Cloud Alibaba 相关</strong></h3>
<ol>
<li><strong><a class=" wrap external" href="https://link.zhihu.com/?target=https%3A//github.com/alibaba/Sentinel" rel="nofollow noreferrer" target="_blank" data-za-detail-view-id="1043">Sentinel</a></strong>&nbsp;：A lightweight powerful flow control component enabling reliability and monitoring for microservices. (轻量级的流量控制、熔断降级 Java 库)。</li>
<li><strong><a class=" wrap external" href="https://link.zhihu.com/?target=https%3A//github.com/apache/dubbo" rel="nofollow noreferrer" target="_blank" data-za-detail-view-id="1043">dubbo</a></strong>&nbsp;：Apache Dubbo 是一个基于 Java 的高性能开源 RPC 框架。</li>
<li><strong><a class=" wrap external" href="https://link.zhihu.com/?target=https%3A//github.com/alibaba/nacos" rel="nofollow noreferrer" target="_blank" data-za-detail-view-id="1043">nacos</a></strong>&nbsp;：Nacos 致力于帮助您发现、配置和管理微服务。Nacos 提供了一组简单易用的特性集，帮助您快速实现动态服务发现、服务配置、服务元数据及流量管理。Nacos 可以作为 Dubbo 的注册中心来使用。</li>
<li><strong><a class=" wrap external" href="https://link.zhihu.com/?target=https%3A//github.com/seata/seata" rel="nofollow noreferrer" target="_blank" data-za-detail-view-id="1043">seata</a></strong>&nbsp;: Seata 是一种易于使用，高性能，基于 Java 的开源分布式事务解决方案。</li>
<li><strong><a class=" wrap external" href="https://link.zhihu.com/?target=https%3A//github.com/apache/rocketmq" rel="nofollow noreferrer" target="_blank" data-za-detail-view-id="1043">RocketMQ</a></strong>&nbsp;：阿里巴巴开源的一款高性能、高吞吐量的分布式消息中间件。</li>
</ol>
<h3><strong>API 网关</strong></h3>
<ol>
<li><strong><a class=" wrap external" href="https://link.zhihu.com/?target=https%3A//github.com/Kong/kong" rel="nofollow noreferrer" target="_blank" data-za-detail-view-id="1043">kong</a></strong>&nbsp;：Kong 是一个云本地的、快速的、可伸缩的分布式微服务抽象层(也称为 API 网关、API 中间件或在某些情况下称为服务网格)。2015 年作为开源项目发布，其核心价值是高性能和可扩展性。</li>
<li><strong><a class=" wrap external" href="https://link.zhihu.com/?target=https%3A//github.com/Dromara/soul" rel="nofollow noreferrer" target="_blank" data-za-detail-view-id="1043">soul</a></strong>&nbsp;：高性能、基于 webflux 的反应式 Java API 网关</li>
</ol>
<h3><strong>其他</strong></h3>
<ol>
<li><strong><a class=" wrap external" href="https://link.zhihu.com/?target=https%3A//github.com/apache/flink" rel="nofollow noreferrer" target="_blank" data-za-detail-view-id="1043">flink</a></strong>&nbsp;：Apache Flink 是一个框架和分布式处理引擎，用于在<em>无边界和有边界</em>数据流上进行有状态的计算。Flink 能在所有常见集群环境中运行，并能以内存速度和任意规模进行计算。</li>
<li><strong><a class=" wrap external" href="https://link.zhihu.com/?target=https%3A//github.com/apache/skywalking" rel="nofollow noreferrer" target="_blank" data-za-detail-view-id="1043">skywalking</a></strong>&nbsp;: 针对分布式系统的应用性能监控，尤其是针对微服务、云原生和面向容器的分布式系统架构。</li>
<li><strong><a class=" wrap external" href="https://link.zhihu.com/?target=https%3A//github.com/ctripcorp/apollo" rel="nofollow noreferrer" target="_blank" data-za-detail-view-id="1043">apollo</a></strong>&nbsp;：Apollo（阿波罗）是携程框架部门研发的分布式配置中心，能够集中化管理应用不同环境、不同集群的配置，配置修改后能够实时推送到应用端，并且具备规范的权限、流程治理等特性，适用于微服务配置管理场景。</li>
<li><strong><a class=" wrap external" href="https://link.zhihu.com/?target=https%3A//github.com/openzipkin/zipkin" rel="nofollow noreferrer" target="_blank" data-za-detail-view-id="1043">zipkin</a></strong>&nbsp;：Zipkin 是一个分布式跟踪系统。它有助于收集解决服务体系结构中的延迟问题所需的时序数据。功能包括该数据的收集和查找。</li>
<li><strong><a class=" wrap external" href="https://link.zhihu.com/?target=https%3A//github.com/analysys/EasyScheduler" rel="nofollow noreferrer" target="_blank" data-za-detail-view-id="1043">EasyScheduler</a></strong>&nbsp;： Easy Scheduler 是一个分布式工作流任务调度系统，主要解决&ldquo;复杂任务依赖但无法直接监控任务健康状态&rdquo;的问题。Easy Scheduler 以 DAG 方式组装任务，可以实时监控任务的运行状态。同时，它支持重试，重新运行等操作&hellip; 。</li>
</ol>
<h3><strong>消息中间件</strong></h3>
<ol>
<li><strong><a class=" wrap external" href="https://link.zhihu.com/?target=https%3A//github.com/apache/rocketmq" rel="nofollow noreferrer" target="_blank" data-za-detail-view-id="1043">RocketMQ</a></strong>&nbsp;：阿里巴巴开源的一款高性能、高吞吐量的分布式消息中间件。</li>
<li><strong><a class=" wrap external" href="https://link.zhihu.com/?target=https%3A//github.com/apache/kafka" rel="nofollow noreferrer" target="_blank" data-za-detail-view-id="1043">Kafaka</a></strong>: Kafka 是一种分布式的，基于发布 / 订阅的消息系统。关于它的入门可以查看：<a class=" wrap external" href="https://link.zhihu.com/?target=https%3A//github.com/Snailclimb/JavaGuide/blob/master/docs/system-design/data-communication/Kafka%25E5%2585%25A5%25E9%2597%25A8%25E7%259C%258B%25E8%25BF%2599%25E4%25B8%2580%25E7%25AF%2587%25E5%25B0%25B1%25E5%25A4%259F%25E4%25BA%2586.md" rel="nofollow noreferrer" target="_blank" data-za-detail-view-id="1043">Kafka 入门看这一篇就够了</a></li>
<li><strong><a class=" wrap external" href="https://link.zhihu.com/?target=https%3A//github.com/rabbitmq" rel="nofollow noreferrer" target="_blank" data-za-detail-view-id="1043">RabbitMQ</a></strong>&nbsp;:由 erlang 开发的基于 AMQP（Advanced Message Queue 高级消息队列协议）协议实现的消息队列。</li>
</ol>
<h3><strong>搜索引擎</strong></h3>
<ol>
<li><strong><a class=" wrap external" href="https://link.zhihu.com/?target=https%3A//github.com/elastic/elasticsearch" rel="nofollow noreferrer" target="_blank" data-za-detail-view-id="1043">elasticsearch</a></strong>：开源，分布式，RESTful 搜索引擎。</li>
</ol>
<h3><strong>数据库</strong></h3>
<ul>
<li><strong><a class=" wrap external" href="https://link.zhihu.com/?target=https%3A//github.com/redisson/redisson" rel="nofollow noreferrer" target="_blank" data-za-detail-view-id="1043">redisson</a></strong>&nbsp;：&nbsp;<a class=" wrap external" href="https://link.zhihu.com/?target=https%3A//redisson.org/" rel="nofollow noreferrer" target="_blank" data-za-detail-view-id="1043">Redisson</a>是架设在<a class=" wrap external" href="https://link.zhihu.com/?target=http%3A//redis.cn/" rel="nofollow noreferrer" target="_blank" data-za-detail-view-id="1043">Redis</a>基础上的一个 Java 驻内存数据网格（In-Memory Data Grid）。支持超过 30 个对象和服务:Set, multiap, SortedSet, Map, List, Queue, Deque, Semaphore, Lock, AtomicLong, Map Reduce, Publish / Subscribe, Bloom filter, Spring Cache, Tomcat, Scheduler, JCache API, Hibernate, RPC。<a class=" wrap external" href="https://link.zhihu.com/?target=https%3A//github.com/redisson/redisson/wiki/Redisson%25E9%25A1%25B9%25E7%259B%25AE%25E4%25BB%258B%25E7%25BB%258D" rel="nofollow noreferrer" target="_blank" data-za-detail-view-id="1043">Redisson 项目介绍</a></li>
</ul>
<h3><strong>其他</strong></h3>
<ol>
<li><strong><a class=" wrap external" href="https://link.zhihu.com/?target=https%3A//github.com/alibaba/canal" rel="nofollow noreferrer" target="_blank" data-za-detail-view-id="1043">canal</a></strong>&nbsp;:阿里巴巴 MySQL binlog 增量订阅&amp;消费组件。</li>
<li><strong><a class=" wrap external" href="https://link.zhihu.com/?target=https%3A//github.com/alibaba/DataX" rel="nofollow noreferrer" target="_blank" data-za-detail-view-id="1043">DataX</a></strong>&nbsp;：DataX 是阿里巴巴集团内被广泛使用的离线数据同步工具/平台，实现包括 MySQL、Oracle、SqlServer、Postgre、HDFS、Hive、ADS、HBase、TableStore(OTS)、MaxCompute(ODPS)、DRDS 等各种异构数据源之间高效的数据同步功能。</li>
<li><strong><a class=" wrap external" href="https://link.zhihu.com/?target=https%3A//github.com/dianping/cat" rel="nofollow noreferrer" target="_blank" data-za-detail-view-id="1043">cat</a></strong>&nbsp;： CAT 作为服务端项目基础组件，提供了 Java, C/C++, Node.js, Python, Go 等多语言客户端，已经在美团点评的基础架构中间件框架（MVC 框架，RPC 框架，数据库框架，缓存框架等，消息队列，配置系统等）深度集成，为美团点评各业务线提供系统丰富的性能指标、健康状况、实时告警等。</li>
<li><strong><a class=" wrap external" href="https://link.zhihu.com/?target=https%3A//github.com/wildfirechat/server" rel="nofollow noreferrer" target="_blank" data-za-detail-view-id="1043">server</a></strong>&nbsp;： 野火 IM 是一套跨平台、核心功能开源的即时通讯解决方案。</li>
<li><strong><a class=" wrap external" href="https://link.zhihu.com/?target=https%3A//github.com/halo-dev/halo" rel="nofollow noreferrer" target="_blank" data-za-detail-view-id="1043">halo</a></strong>&nbsp;:Halo 可能是最好的 Java 博客系统。</li>
</ol>
<h2><strong>工具</strong></h2>
<h3><strong>常用工具类/代码质量</strong></h3>
<ol>
<li><strong><a class=" wrap external" href="https://link.zhihu.com/?target=https%3A//github.com/rzwitserloot/lombok" rel="nofollow noreferrer" target="_blank" data-za-detail-view-id="1043">lombok</a></strong>&nbsp;:使用 Lombok 我们可以简化我们的 Java 代码，比如使用它之后我们通过注释就可以实现 getter/setter、equals等方法。</li>
<li><strong><a class=" wrap external" href="https://link.zhihu.com/?target=https%3A//github.com/google/guava" rel="nofollow noreferrer" target="_blank" data-za-detail-view-id="1043">guava</a></strong>&nbsp;：Guava 是一组核心库，其中包括新的集合类型（例如 multimap 和 multiset），不可变集合，图形库以及用于并发、I / O、哈希、原始类型、字符串等的实用程序！</li>
<li><strong><a class=" wrap external" href="https://link.zhihu.com/?target=https%3A//github.com/alibaba/p3c" rel="nofollow noreferrer" target="_blank" data-za-detail-view-id="1043">p3c</a></strong>&nbsp;：Alibaba Java Coding Guidelines pmd implements and IDE plugin。Eclipse 和 IDEA 上都有该插件，推荐使用！</li>
<li><strong><a class=" wrap external" href="https://link.zhihu.com/?target=https%3A//github.com/alibaba/arthas" rel="nofollow noreferrer" target="_blank" data-za-detail-view-id="1043">arthas</a></strong>&nbsp;： Arthas 是 Alibaba 开源的 Java 诊断工具。</li>
<li><strong><a class=" wrap external" href="https://link.zhihu.com/?target=https%3A//github.com/SonarSource/sonarqube" rel="nofollow noreferrer" target="_blank" data-za-detail-view-id="1043">sonarqube</a></strong>&nbsp;：SonarQube 支持所有开发人员编写更干净，更安全的代码。</li>
<li><strong><a class=" wrap external" href="https://link.zhihu.com/?target=https%3A//github.com/checkstyle/checkstyle" rel="nofollow noreferrer" target="_blank" data-za-detail-view-id="1043">checkstyle</a></strong>&nbsp;:Checkstyle 是一种开发工具，可帮助程序员编写符合编码标准的 Java 代码。它使检查 Java 代码的过程自动化，从而使人们不必执行这项无聊（但很重要）的任务。这使其成为想要实施编码标准的项目的理想选择。</li>
<li><strong><a class=" wrap external" href="https://link.zhihu.com/?target=https%3A//github.com/pmd/pmd" rel="nofollow noreferrer" target="_blank" data-za-detail-view-id="1043">pmd</a></strong>&nbsp;: 可扩展的多语言静态代码分析器。</li>
<li><strong><a class=" wrap external" href="https://link.zhihu.com/?target=https%3A//github.com/spotbugs/spotbugs" rel="nofollow noreferrer" target="_blank" data-za-detail-view-id="1043">spotbugs</a></strong>&nbsp;:SpotBugs 是 FindBugs 的继任者。静态分析工具，用于查找 Java 代码中的错误。</li>
<li><strong><a class=" wrap external" href="https://link.zhihu.com/?target=https%3A//github.com/looly/hutool" rel="nofollow noreferrer" target="_blank" data-za-detail-view-id="1043">hutool</a></strong>&nbsp;: Hutool 是一个 Java 工具包，也只是一个工具包，它帮助我们简化每一行代码，减少每一个方法，让 Java 语言也可以&ldquo;甜甜的&rdquo;。</li>
</ol>
<h3><strong>Excel</strong></h3>
<ol>
<li><strong><a class=" wrap external" href="https://link.zhihu.com/?target=https%3A//github.com/alibaba/easyexcel" rel="nofollow noreferrer" target="_blank" data-za-detail-view-id="1043">easyexcel</a></strong>&nbsp;:快速、简单避免OOM的java处理Excel工具。</li>
</ol>
<h3><strong>PDF</strong></h3>
<ol>
<li><strong><a class=" wrap external" href="https://link.zhihu.com/?target=https%3A//github.com/apache/pdfbox" rel="nofollow noreferrer" target="_blank" data-za-detail-view-id="1043">pdfbox</a></strong>&nbsp;:用于处理PDF文档的开放源码Java工具。该项目允许创建新的PDF文档、对现有文档进行操作以及从文档中提取内容。PDFBox还包括几个命令行实用程序。PDFBox是在Apache 2.0版许可下发布的。</li>
<li><strong><a class=" wrap external" href="https://link.zhihu.com/?target=https%3A//github.com/LibrePDF/OpenPDF" rel="nofollow noreferrer" target="_blank" data-za-detail-view-id="1043">OpenPDF</a></strong>&nbsp;：OpenPDF是一个免费的Java库，用于使用LGPL和MPL开源许可创建和编辑PDF文件。OpenPDF基于iText的一个分支。</li>
<li><strong><a class=" wrap external" href="https://link.zhihu.com/?target=https%3A//github.com/itext/itext7" rel="nofollow noreferrer" target="_blank" data-za-detail-view-id="1043">itext7</a></strong>&nbsp;：iText 7代表了想要利用利用好 PDF 的开发人员的更高级别的 sdk。iText 7配备了更好的文档引擎、高级和低级编程功能以及创建、编辑和增强 PDF 文档的能力，几乎对每个工作流都有好处。</li>
<li><strong><a class=" wrap external" href="https://link.zhihu.com/?target=https%3A//xmlgraphics.apache.org/fop/" rel="nofollow noreferrer" target="_blank" data-za-detail-view-id="1043">FOP</a></strong>&nbsp;:Apache FOP 项目的主要的输出目标是PDF。</li>
</ol>
<h3><strong>开发必备</strong></h3>
<h3><strong>API 请求</strong></h3>
<ol>
<li><strong><a class=" wrap external" href="https://link.zhihu.com/?target=https%3A//insomnia.rest/" rel="nofollow noreferrer" target="_blank" data-za-detail-view-id="1043">Insomnia</a></strong>&nbsp;:像人类而不是机器人一样调试API。我平时经常用的，界面美观且轻量，总之很喜欢。</li>
<li><strong><a class=" wrap external" href="https://link.zhihu.com/?target=https%3A//www.getpostman.com/" rel="nofollow noreferrer" target="_blank" data-za-detail-view-id="1043">postman</a></strong>&nbsp;：API 请求生成器。</li>
<li><strong><a class=" wrap external" href="https://link.zhihu.com/?target=https%3A//github.com/liyasthomas/postwoman" rel="nofollow noreferrer" target="_blank" data-za-detail-view-id="1043">postwoman</a></strong>&nbsp;：API 请求生成器-一个免费、快速、漂亮的 Postma 替代品。</li>
</ol>
<h3><strong>Markdown</strong></h3>
<ol>
<li><strong><a class=" wrap external" href="https://link.zhihu.com/?target=https%3A//www.typora.io/" rel="nofollow noreferrer" target="_blank" data-za-detail-view-id="1043">Typora</a></strong>&nbsp;:我一直用的一款 Markdown 工具，直接文件夹试图和目录试图，支持 Markdown 格式直接导出成 PDF、HTML 等格式。</li>
<li><strong><a class=" wrap external" href="https://link.zhihu.com/?target=https%3A//github.com/adam-p/markdown-here" rel="nofollow noreferrer" target="_blank" data-za-detail-view-id="1043">markdown-here</a></strong>&nbsp;：使用 markdown 语法发邮件，并且提供多种主题，快来拯救你的邮件格式吧！</li>
</ol>
<h3><strong>其他</strong></h3>
<ol>
<li><strong><a class=" wrap external" href="https://link.zhihu.com/?target=https%3A//github.com/thingsboard/thingsboard" rel="nofollow noreferrer" target="_blank" data-za-detail-view-id="1043">thingsboard</a></strong>&nbsp;：开源物联网平台 - 设备管理，数据收集，处理和可视化。</li>
</ol>]]></content><link href="https://github.com/jaaleng/gitblog/issues/27"/><category term="存档"/><category term="2024"/><published>2024-07-21T10:33:03+00:00</published></entry><entry><id>https://github.com/jaaleng/gitblog/issues/26</id><title>Emby客户端整理汇总</title><updated>2024-07-25T14:03:42.768922+00:00</updated><content type="html"><![CDATA[<blockquote>
<p>排名不分先后：</p>
</blockquote>
<p>iOS/iPadOS/macOS/AppleTV/Android/AndroidTV：
<a href="https://emby.media/">Emby</a></p>
<p>Android：
<a href="https://github.com/AttemptD/AfuseKt-release">AfuseKt</a></p>
<p>iOS/iPadOS/macOS/AppleTV：
<a href="https://apps.apple.com/cn/app/id1136220934">Infuse</a>
<a href="https://apps.apple.com/cn/app-bundle/max-yybx-iemc-tvok-foxok-yyb/id1645687971">yybx</a>
<a href="https://apps.apple.com/cn/app/fileball/id1558391784">Fileball</a>
<a href="https://apps.apple.com/cn/app/id1659622164">VidHub</a>
<a href="https://apps.apple.com/cn/app/id6450330892">Conflux</a></p>
<p>iOS/iPadOS：
<a href="https://apps.apple.com/cn/app/id6443975850">SenPlayer</a>
<a href="https://apps.apple.com/cn/app/id6458691598">HamHub</a></p>
<p>iOS/iPadOS emtv AppleTV：
<a href="https://apps.apple.com/cn/app/id1467462861">iemc</a> </p>
<p>iOS/iPadOS/Android：
<a href="https://github.com/ourfor/iPlay?tab=readme-ov-file#-download">iPlay</a></p>
]]></content><link href="https://github.com/jaaleng/gitblog/issues/26"/><category term="生活"/><published>2024-07-21T10:31:49+00:00</published></entry><entry><id>https://github.com/jaaleng/gitblog/issues/25</id><title>黑洞的吸积盘与喷流</title><updated>2024-07-25T14:03:43.119451+00:00</updated><content type="html"><![CDATA[<p>黑洞的吸积盘与喷流<br />
图示提供: NASA, Swift, Aurore Simonnet (Sonoma State U.)
<img src="https://pic.imgdb.cn/item/663a39b10ea9cb1403df81ff.jpg" alt="" /></p>
<p>当黑洞吞噬恒星时，会发生什么事？</p>
<p>许多细节目前仍不明，但最近的观测提供了新线索。</p>
<p>在2014年，地面的全天自动超新星巡天计划（ASAS-SN）的望远镜，侦测到一例强烈的爆发事件，并由包括美国航太总署的快捷号卫星在内的仪器进行后续观测。这些所侦测到</p>
<p>的辐射之电脑&amp;拟合，与恒星被遥远超大质量黑洞撕裂的特征相符。此一碰撞事件的结果，可用上面这张主题图示来呈现。这颗黑洞是图示中心的小黑点，而随著物质往黑洞坠落，物质之间的碰撞会造成温度升高，并形成环拱黑洞、前世为恒星炽热物质的吸积盘，以及沿著黑洞自转轴射出的喷流。</p>
]]></content><link href="https://github.com/jaaleng/gitblog/issues/25"/><category term="生活"/><published>2024-07-21T10:31:03+00:00</published></entry><entry><id>https://github.com/jaaleng/gitblog/issues/24</id><title>网易发布 iOS、Android 个人媒体库</title><updated>2024-07-25T14:03:43.301715+00:00</updated><content type="html"><![CDATA[<p>软件名称：Filmly</p>
<p>软件功能：个人媒体库</p>
<p>支持平台：#Android #iOS
<img src="https://pic.imgdb.cn/item/663a42eb0ea9cb1403ed53f2.jpg" alt="" />
软件简介：网易发布 iOS、Android 个人媒体库，可在线播放视频（阿里云盘、百度盘），支持刮削、海报墙。</p>
<p>能自动识别影片的相关信息，如导演、演员等，并将这些信息整合显示。</p>
<p>软件下载：<a href="https://filmly.163.com/">点击下载</a></p>
]]></content><link href="https://github.com/jaaleng/gitblog/issues/24"/><category term="存档"/><published>2024-07-21T10:28:58+00:00</published></entry><entry><id>https://github.com/jaaleng/gitblog/issues/23</id><title>波浪预测：人工智能在公海上与水墙作战</title><updated>2024-07-25T14:03:43.453173+00:00</updated><content type="html"><![CDATA[<p>2020 年，温哥华岛 Ucluelet 海岸附近的一系列浮标记录到了一个 17.6 米（57.7 英尺）高的巨浪。2022 年，&quot;维京北极星&quot;号游轮被破坏性海浪击中，一名乘客丧生。</p>
<p>尽管 2019 年的一项研究发现，破坏性海浪发生的频率有所降低，但也得出了破坏性海浪越来越严重的结论。因此，帮助预测巨浪的系统可以极大地保护海上作业人员的生命安全，他们可以在巨浪来袭前寻求庇护并采取其他预防措施。去年，哥本哈根大学的研究人员利用人工智能系统分析了全球 158 个地点的浮标数据，解开了这些难以预测的巨浪的复杂成因。</p>
<p>研究小组发现，它们是由一个被称为线性叠加的过程引起的，在这个过程中，两个波浪系统交叉并相互放大。研究报告的第一作者迪昂-海夫纳（Dion Häfner）当时说：&quot;如果两个波浪系统在海上相遇的方式增加了产生高波峰和深波谷的几率，就会产生超大海浪的风险。&quot;现在，马里兰大学的两位研究人员再次利用人工智能分析海量数据，试图进一步了解破坏性海浪。他们对来自美国大陆和太平洋岛屿沿岸 172 个浮标的 1400 万个 30 秒长的海面高程测量样本进行了神经网络训练。目的是训练人工智能系统，使其能够分析出哪些海浪会引发第二轮巨浪。在测试中，新系统能够正确识别未来一分钟内的破坏性海浪事件，准确率为 75%，未来五分钟内的准确率为 73%。</p>
<p>研究人员认为，这些结果可能会促成一种预警系统，帮助海上作业人员躲避破坏性海浪的最坏影响，但他们也承认这项工作存在局限性。他们在刚刚发表在《科学报告》（Scientific Reports）杂志上的研究论文中写道：&quot;四次破坏性海浪中大约有三次被预测到，这也意味着四次破坏性海浪中有一次没有被预测到，并且发出了大量错误警报。对于一个运行系统来说，这种准确性必须进一步提高。为此，可以通过采用更强大的神经网络架构来改变所采取的数据驱动方法。&quot;除了提高人工智能系统的鲁棒性，该团队还表示，在分析中加入更多数据，如风速、水深和波浪位置信息，可以帮助它变得更加准确。&quot;虽然我们方法的成功率令人鼓舞，但利用神经网络，我们只能对破坏性海浪事件的基本物理原理得出有限的结论，&quot;合著者托马斯-布吕农（Thomas Breunung）说。&quot;作为研究人员，我们现在比以往任何时候都更有动力利用类似的方法来深入了解破坏性海浪&quot;。</p>
<p>论文的另一位作者巴拉库马尔-巴拉钱德兰（Balakumar Balachandran）补充说，他们研究中使用的神经网络也可以有更广泛的应用。他说：&quot;破坏性海浪是极端事件的一种。我们的数据驱动方法可能有助于理解和预测与气候变化和燃烧过程等相关的其他极端事件。&quot; ...</p>
]]></content><link href="https://github.com/jaaleng/gitblog/issues/23"/><category term="2024"/><published>2024-07-19T12:45:48+00:00</published></entry><entry><id>https://github.com/jaaleng/gitblog/issues/22</id><title>Google动手清理Play Store上的“低质量”应用</title><updated>2024-07-25T14:03:43.613579+00:00</updated><content type="html"><![CDATA[<p>Google提高了应用上架的门槛，旨在为用户提供更好的体验。</p>
<p>从8月31日起，Play Store上的应用必须具备实际功能，不能只是摆设。那些只有文字内容、单一壁纸或者完全无用的应用将不再被允许上架。</p>
<p>去年，Google已经对Play Store上的应用进行了一次大清理，移除了228万个违规应用，并封禁了33.3万个违规账户。</p>
]]></content><link href="https://github.com/jaaleng/gitblog/issues/22"/><category term="2024"/><published>2024-07-19T12:43:07+00:00</published></entry><entry><id>https://github.com/jaaleng/gitblog/issues/21</id><title>OpenAI推出“GPT-4o mini</title><updated>2024-07-25T14:03:43.783763+00:00</updated><content type="html"><![CDATA[<p><img src="https://pic.imgdb.cn/item/66992aa8d9c307b7e9f25b3f.jpg" alt="" /></p>
<p><a href="https://www.cnbc.com/2024/07/18/openai-4o-mini-model-announced.html">OpenAI推出“GPT-4o mini”</a></p>
<p>OpenAI称，GPT-4o mini是“功能最强、成本偏低的模型”，计划今后整合图像、视频、音频到这个模型中。</p>
<p>该公司在一份新闻稿中表示，GPT-4o mini从周四开始向ChatGPT的免费用户以及ChatGPT Plus和Team订阅者开放，并将于下周向ChatGPT Enterprise用户提供。</p>
]]></content><link href="https://github.com/jaaleng/gitblog/issues/21"/><category term="存档"/><published>2024-07-18T14:47:57+00:00</published></entry><entry><id>https://github.com/jaaleng/gitblog/issues/20</id><title>如何基于Github Issues与Github Actions写技术博客？</title><updated>2024-07-25T14:03:43.944937+00:00</updated><content type="html"><![CDATA[<p>这是使用Github Issues写的第一篇博客，简单记录下搭建步骤以及期间遇到的几个问题。</p>
<ol>
<li>新建一个仓库gitblog
下载到本地</li>
<li>新建仓库G_KEY
a. 新生成一个<a href="https://github.com/settings/tokens">github token</a>，
New personal access token (classic)
scope勾选： repo、workflow、gist、user，
生成后复制到一个安全的地方存储后面备用；
b. 配置<a href="https://github.com/humyna/gitblog/settings/secrets/actions">Repository secrets</a>
settings--secrets and variables--Actions--new repository secrets,名称为G_KEY,值就是上面的github token</li>
</ol>
<p>注意：这个G_KEY会在后面的gene_readme.yml文件中使用</p>
<ol start="3">
<li>下载yihong0618开源的<a href="https://github.com/yihong0618/gitblog">这个项目</a>，将其中除了feed.xml的文件全部copy到第一步项目中。
a. BACKUP中只保留.gitkeep空文件，
b. 修改gene_readme.yml文件，L11中分支名由master改成main;前面的G_KEY在这个文件配置(secrets.G_KEY)。
c. 修改main.py文件，搜索master,改成main</li>
</ol>
<p>4.修改<a href="https://github.com/humyna/gitblog/settings/actions">workflow permissions</a> <img src="https://private-user-images.githubusercontent.com/2505439/301553770-5d34862e-a7ca-458a-9e28-52b76df895d5.png?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MjEyMTk3NzksIm5iZiI6MTcyMTIxOTQ3OSwicGF0aCI6Ii8yNTA1NDM5LzMwMTU1Mzc3MC01ZDM0ODYyZS1hN2NhLTQ1OGEtOWUyOC01MmI3NmRmODk1ZDUucG5nP1gtQW16LUFsZ29yaXRobT1BV1M0LUhNQUMtU0hBMjU2JlgtQW16LUNyZWRlbnRpYWw9QUtJQVZDT0RZTFNBNTNQUUs0WkElMkYyMDI0MDcxNyUyRnVzLWVhc3QtMSUyRnMzJTJGYXdzNF9yZXF1ZXN0JlgtQW16LURhdGU9MjAyNDA3MTdUMTIzMTE5WiZYLUFtei1FeHBpcmVzPTMwMCZYLUFtei1TaWduYXR1cmU9Y2UyOWFhZmZiZTY3NzdmN2FiZjE4NDM2MTI5NTNmMmMzN2M1YTAxMWRkMWJkZjNjYzJmZjY0ZWRkN2FjZWM4MiZYLUFtei1TaWduZWRIZWFkZXJzPWhvc3QmYWN0b3JfaWQ9MCZrZXlfaWQ9MCZyZXBvX2lkPTAifQ.Uk4ELDwlZNJ_Rh_lt6HxRQSTFs8Dg-9xNgmR4AzoiaE" alt="image" /></p>
<p>如果不修改，在提交issue后，github actions执行报错 <img src="https://private-user-images.githubusercontent.com/2505439/301554548-e273a1c4-f217-414b-8329-27ad3fd8e605.png?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MjEyMTk3NzksIm5iZiI6MTcyMTIxOTQ3OSwicGF0aCI6Ii8yNTA1NDM5LzMwMTU1NDU0OC1lMjczYTFjNC1mMjE3LTQxNGItODMyOS0yN2FkM2ZkOGU2MDUucG5nP1gtQW16LUFsZ29yaXRobT1BV1M0LUhNQUMtU0hBMjU2JlgtQW16LUNyZWRlbnRpYWw9QUtJQVZDT0RZTFNBNTNQUUs0WkElMkYyMDI0MDcxNyUyRnVzLWVhc3QtMSUyRnMzJTJGYXdzNF9yZXF1ZXN0JlgtQW16LURhdGU9MjAyNDA3MTdUMTIzMTE5WiZYLUFtei1FeHBpcmVzPTMwMCZYLUFtei1TaWduYXR1cmU9MGUzZjIxMTE3OTg0ZThiM2QwMjZlNjRmZmQ5NTJmMDQ2NGYyZGJhOTBmNTdmYjA1NTA4OWU0ZTQ1ODg5MDY1OCZYLUFtei1TaWduZWRIZWFkZXJzPWhvc3QmYWN0b3JfaWQ9MCZrZXlfaWQ9MCZyZXBvX2lkPTAifQ.oDR5gCC7WbN1qndEwCHZIJSjyCup9jubx4B3eViZNDY" alt="image" /></p>
<p>5.初始化一些<a href="https://github.com/humyna/gitblog/labels">labels</a></p>
<p><strong>至此基于issues个人博客就搭建完成了，可以愉快地写作了。</strong></p>
<p>注意：提交issues，选择lable，github actions会被触发执行。</p>
]]></content><link href="https://github.com/jaaleng/gitblog/issues/20"/><category term="About"/><published>2024-07-17T13:06:33+00:00</published></entry><entry><id>https://github.com/jaaleng/gitblog/issues/19</id><title>Google和微软的耗电量已经超过了100多个国家</title><updated>2024-07-25T14:03:44.144507+00:00</updated><content type="html"><![CDATA[<p><img src="https://pic.imgdb.cn/item/66968e67d9c307b7e96ef286.jpg" alt="" /></p>
<p>根据迈克尔-托马斯（Michael Thomas）的分析，2023 年，Google和微软各消耗 24 太瓦时的电力，超过了 100 多个国家的耗电量，其中包括冰岛、加纳和突尼斯。虽然大量使用能源意味着这些科技巨头会对环境造成巨大影响，但应该指出的是，Google和微软创造的财富也超过了许多国家。</p>
<p>详细分析显示，Google和微软 2023 年的耗电量为 24 太瓦时，相当于阿塞拜疆（人口 1014 万）的耗电量，高于其他几个国家。例如，冰岛、加纳、多米尼加共和国和突尼斯的耗电量均为 19 太瓦时，而约旦的耗电量为 20 太瓦时。当然，也有一些国家的耗电量超过了Google和微软。例如，拥有 540 万居民的斯洛伐克的耗电量为 26 太瓦时。</p>
<p>这一比较凸显了高科技公司对能源的巨大需求：Google和微软运营的数据中心对环境造成了相当大的影响。但是，如果我们将Google和微软的耗电量和发电量与上述一些国家进行比较呢？</p>
<p>2023 年，Google创造了 3056 亿美元的收入，而根据Google自己的数据，包括Google搜索、Google云和 YouTube 等工具在内的Google经济影响为经济贡献了约 7390 亿美元。</p>
<p>微软公布的 2023 年收入为 2119 亿美元。要知道，世界上绝大多数人都在使用微软的 Windows 和 Office，而且大量在线应用程序都运行在微软的 Azure 上，因此微软产品的经济影响可能以万亿美元计。</p>
<p>与能源消耗大致相同的国家相比，2023 年阿塞拜疆的 GDP 约为 780 亿美元，斯洛伐克的 GDP 约为 1270 亿美元，冰岛的 GDP 约为 300 亿美元。</p>
<p>Google和微软的经济产出远远超过了这些国家的国内生产总值，这凸显了这些科技巨头庞大的资金规模与其大量的电力消耗。虽然Google和微软的大量用电量凸显了在科技行业内围绕可持续发展和采用可再生能源进行讨论的必要性，但这两家公司在行业内采用可再生能源方面处于领先地位。</p>
<p>事实上，Google早已成为使用可再生能源的先驱。该公司自 2007 年起就实现了碳中和，并计划到 2030 年在其所有数据中心实现全天候无碳能源运营。2023 年，Google宣布将继续投资可再生能源项目，扩大其投资组合，包括各种风能、太阳能和其他可再生能源。</p>
<p>至于微软，它已承诺到 2030 年实现负碳排放，即从环境中清除的碳要多于排放的碳。同年，公司还将实现零废物产生和正用水量的目标。2023 年，微软将其签约的可再生能源资产组合增加到 19.8 千兆瓦以上，涵盖 21 个国家的项目。公司还致力于减少直接运营排放，解决间接排放问题，尤其是与建设新数据中心和硬件组件相关的排放。</p>
]]></content><link href="https://github.com/jaaleng/gitblog/issues/19"/><category term="存档"/><published>2024-07-16T15:15:23+00:00</published></entry><entry><id>https://github.com/jaaleng/gitblog/issues/18</id><title>图床集合</title><updated>2024-07-25T14:03:44.303319+00:00</updated><content type="html"><![CDATA[<p><a href="https://postimages.org/">postimages.org</a></p>
<p><a href="https://postimages.org/">Postimages — free image hosting / image upload 7</a>
Provides free image upload and hosting integration for forums. Free picture hosting and photo sharing for websites and blogs.</p>
<p><a href="https://111666.best/">111666.best</a>
<a href="https://111666.best/">16图床，永久免费，无需登录的图床 15</a>
颜值担当，UI现代化，支持暗黑模式，多重备份，分布式数据库，oss冷备份，全格式支持，尊重隐私，允许撤回图片</p>
<p><a href="https://img.tg/">IMG.TG</a></p>
<p><a href="https://img.tg/">免费图床 8</a>
TG 图床 (imgtg.com) 的免费版，包含国际 CDN 的永久免费图床，毫秒级的访问体验，异地备份并永久保存在云端。</p>
<p><a href="https://www.superbed.cn/">superbed.cn</a>
<a href="https://www.superbed.cn/">聚合图床 - 免费无限图片上传 3</a>
聚合图床是一个提供高速外链的免费图床，无限流量，无限外链，全球网络加速，提供API和客户端上传图片，专业的跨境电商图片上传和托管，适合亚马逊, wish, ebay, shopify, 速卖通等电商批量上传图片</p>
<p><a href="https://img.gejiba.com/">老王图床</a></p>
<p><a href="https://img.gejiba.com/">免费图片上传, 专业图片外链, 免费公共图床, 老王图床 6</a>
老王图床提供稳定的图片托管服务</p>
<p>1.全球 CDN 免费图床 IMG.TG：图片大小限制为5MB。存储容量不限，每月限制500张，时不时会维护</p>
<p>改为收费：<a href="https://imgtg.com/">https://imgtg.com 1</a> 丨 附带免费：<a href="https://img.tg/">https://img.tg 1</a></p>
<p>2.聚合图床 – 免费无限图片上传：<a href="https://www.superbed.cn/">https://www.superbed.cn 2</a></p>
<p>3.免费图片上传, 专业图片外链, 免费公共图床, 老王图床：个人，最大 10 MB 图片大小. 直接的源图片链接, BBCode代码和HTML缩略图显示</p>
<p><a href="https://img.gejiba.com/">老王图床</a></p>
<p><a href="https://img.gejiba.com/">免费图片上传, 专业图片外链, 免费公共图床, 老王图床 1</a>
老王图床提供稳定的图片托管服务</p>
<p>4.Z4A图床：最大64MB 图片大小. 直接的源图片链接，储存图片超过2000张（暂定）的用户，商业用户需进行赞助。</p>
<p><a href="https://www.z4a.net/">Z4A图床-做国内最良心的免费图床</a></p>
<p><a href="https://www.z4a.net/">Z4A图床 1</a>
Z4A免费图床</p>
<p>5.<a href="https://www.imagehub.cc/">https://www.imagehub.cc 2</a> 支持单张最大10MB图片上传全球CDN加速，多地数据实时备份。</p>
<p><a href="https://www.imagehub.cc/">ImageHub - 图仓</a></p>
<p><a href="https://www.imagehub.cc/">免费图床，提供免费图片托管服务 2</a>
免费图片托管，专业图片外链，免费图床，公益图床，免费相册，支持相册加密，支持图片批量上传，原图保存，不限空间，不限流量，分线路解析，全球CDN加速！</p>
<p>​6.免费图片上传-图片外链-免费公共图床：</p>
<p>最大 20 MB 图片大小. 直接的源图片，这个很好用但是每个小时限10张，每天好像限制100，速度很快，需要注册，实名是跳转到腾讯云人脸</p>
<p><a href="https://www.helloimg.com/">helloimg.com</a>
<a href="https://www.helloimg.com/">Hello图床 - 免费图片上传-图片外链-免费公共图床 1</a>
Hello图床是一款支持多图上传,粘贴上传,URL上传,图片压缩,图片鉴黄等多种实用功能,提供高速稳定的图片上传和外链服务与全球CDN加速服务！</p>
<p>7.路过图床：老牌图床了，从2011年就开始向大家开放，提供高速稳定的图片上传和外链分享服务，最大单张图片支持10MB，提供全球CDN加速、支持外链、 原图保存、无需注册。官方承诺，全站启用SSL加密链接，保障您的信息安全，不会删除图片, 即使是多年无任何流量的图片也不会删除。说是这么说，但是有些敏感图片照样删</p>
<p><a href="https://imgse.com/">路过图床</a></p>
<p><a href="https://imgse.com/">免费图片上传, 专业图片外链, 免费公共图床</a>
路过图床, 免费公共图床, 提供图片上传和图片外链服务, 原图保存, 全球CDN加速.</p>
<p>8.SM.MS图床:土豪兽兽建的图床，2015 年开始正式运营。速度：现在估计是被滥用了没那么快了 烧风购买了更多节点、修改了服务架构，现在全球速度还是不错的。CDN：烧风自建的 CDN，有香港阿里云、DigitalOcean 欧洲和 Linode 北美等节点 HTTPS：HTTP 会被 301 跳转 HTTPS（支持 HTTP2）</p>
<p>支持 API 操作，图片存储非常可靠，V2EX 钦点的图床。iOS 和 Android 应用 即将开发完毕已经分别上架 iTunes 和 Play Store，甚至有第三方做的 Telegram Bot</p>
<p><a href="https://sm.ms/">sm.ms</a></p>
<p><a href="https://sm.ms/">Image Upload - SM.MS - Simple Free Image Hosting 1</a>
Simple Free Image Hosting</p>
<p>9.即刻图床 : 大厂全球CDN加速,支持外链,不限流量,支持粘贴上传、拖放上传</p>
<p><a href="https://jiketuchuang.com/">jiketuchuang.com</a>
<a href="https://jiketuchuang.com/">即刻图床 - 大厂全球CDN加速,支持外链,不限流量,支持粘贴上传、拖放上传 jiketuchuang.com。 5</a>
一款利用国内“大厂”的图床，实现图片的上传！</p>
<p>10.图片映客–水墨图床，免费的高速外链图床-免费高速图床-致力于创建一流的图片加速空间 最大可上传 50.00 MB 的图片 单次同时可选择 50 张 注册登陆后自主管理</p>
<p><a href="https://img.ink/">https://img.ink/ 1</a></p>
<p>11.图几度图床 – 存储图片：我们是认真的,无需登陆即可上传 单个文件支持最大 3 M 每次最多允许 5 张图片上传</p>
<p><a href="https://img.tujidu.com/">https://img.tujidu.com/</a>
12.简单图床 – EasyImage ：</p>
<p><a href="https://png.cm/">https://png.cm/</a></p>
<p>13.PostImage：速度：国外速度杠杠的，国内别被墙就好 CDN：AdvancedHosted CDN ；HTTPS：支持</p>
<p>PostImage 图床的介绍说是为了方便用户在 Facebook 和 Twitter 上传图。这个图床用的 CDN 服务商不太有名</p>
<p><a href="https://postimages.org/">postimages.org</a></p>
<p><a href="https://postimages.org/">Postimages — free image hosting / image upload 1</a>
Provides free image upload and hosting integration for forums. Free picture hosting and photo sharing for websites and blogs.</p>
<p>14.ImgBox ：实在不敢恭维，估计只有在北美地区的访客才能保证最快的速度 CDN：两台位于美国的 Leaseweb 的服务器 HTTPS：支持</p>
<p>上传地址 虽然用的服务器挺一般，但是毕竟也是一家国外老牌图床了。自 2010 年起开始运营以来，已经托管了上百万张图片，看起来还是令人放心的。</p>
<p><a href="https://imgbox.com/">imgbox.com</a>
<a href="https://imgbox.com/">imgbox - fast, simple image host</a>
Use imgbox to upload, host and share all your images. It's simple, free and blazing fast!</p>
<p>15.小贱贱图床：速度：一般般~获取一个简单的外链，图床用的是微博空间，速度很快，但是图片清晰度会变低。每日可以上传图片20张</p>
<p><a href="https://pic.xiaojianjian.net/">pic.xiaojianjian.net</a>
<a href="https://pic.xiaojianjian.net/">小贱贱图床 | 免费CDN图床 不限流量 无限外链 3</a>
小贱贱永久免费图床，支持批量上传，即时预览，不限制流量，永久保存。全网CDN图床，高速稳定,支持网页、手机上传，无需插件。支持JPG, GIF, PNG等文件格式。</p>
<p>16.Imgbb（付费）：任意拖放图片到这里, 即开始上传您的图片. 最大 32 MB 图片大小. 直接的源图片链接, BBCode代码和HTML缩略图显示</p>
<p><a href="https://zh-cn.imgbb.com/">https://zh-cn.imgbb.com/</a>
<a href="https://img.icepm.top/">https://img.icepm.top/</a></p>
]]></content><link href="https://github.com/jaaleng/gitblog/issues/18"/><category term="存档"/><published>2024-07-15T14:23:38+00:00</published></entry><entry><id>https://github.com/jaaleng/gitblog/issues/17</id><title>一个基于 React native 开发的音乐软件</title><updated>2024-07-25T14:03:44.457900+00:00</updated><content type="html"><![CDATA[<p>说明
一个基于 React native 开发的音乐软件。</p>
<p>支持的平台：</p>
<p>Android
注：不计划支持IOS</p>
<p>软件变化请查看：<a href="https://github.com/ikunshare/lx-music-mobile-mod/blob/master/CHANGELOG.md">更新日志</a>
软件下载请转到：<a href="https://github.com/ikunshare/lx-music-mobile-mod/releases">发布页面</a>
或者到网盘下载（网盘内有MAC、windows版）：<a href="https://ikunruku.lanzouo.com/b007so8e7a/">https://ikunruku.lanzouo.com/b007so8e7a/</a> 密码：lxmusicmod（若链接无法打开请百度：蓝奏云链接打不开）
使用常见问题请转至：<a href="https://lyswhut.github.io/lx-music-doc/mobile/faq">常见问题</a>
桌面版项目地址：<a href="https://github.com/ikunshare/lx-music-desktop-mod">https://github.com/ikunshare/lx-music-desktop-mod</a></p>
<p>目前本项目的原始发布地址只有GitHub及蓝奏网盘，其他渠道均为第三方转载发布，与本项目无关！</p>
<p>为了提高使用门槛，本软件内的默认设置、UI操作不以新手友好为目标，所以使用前建议先根据你的喜好浏览调整一遍软件设置，阅读一遍<a href="https://lyswhut.github.io/lx-music-doc/mobile/faq/playlist">音乐播放列表机制</a></p>
<p>数据同步服务
从v1.0.0起，我们发布了一个独立版的<a href="https://github.com/lyswhut/lx-music-sync-server#readme">数据同步服务</a>，如果你有服务器，可以将其部署到服务器上作为私人多端同步服务使用，详情看该项目说明</p>
<p>贡献代码
本项目欢迎PR，但为了PR能顺利合并，需要注意以下几点：</p>
<p>对于添加新功能的PR，建议在PR前先创建issue说明，以确认该功能是否确实需要
对于修复Bug PR，请提供修复前后的说明及重现方式
其他类型的PR则适当附上说明
贡献代码步骤：</p>
<p>参照<a href="https://lyswhut.github.io/lx-music-doc/mobile/use-source-code">源码使用方法</a>设置开发环境
克隆本仓库代码并切换到dev分支开发
提交PR
项目协议
本项目基于 <a href="https://github.com/lyswhut/lx-music-mobile/blob/master/LICENSE">Apache License 2.0</a> 许可证发行，以下协议是对于 Apache License 2.0 的补充，如有冲突，以以下协议为准。</p>
<p>词语约定：本协议中的“本项目”指洛雪音乐移动版项目；“使用者”指签署本协议的使用者；“官方音乐平台”指对本项目内置的包括酷我、酷狗、咪咕等音乐源的官方平台统称；“版权数据”指包括但不限于图像、音频、名字等在内的他人拥有所属版权的数据。</p>
<p>一、数据来源
1.1 本项目的各官方平台在线数据来源原理是从其公开服务器中拉取数据（与未登录状态在官方平台APP获取的数据相同），经过对数据简单地筛选与合并后进行展示，因此本项目不对数据的合法性、准确性负责。</p>
<p>1.2 本项目本身没有获取某个音频数据的能力，本项目使用的在线音频数据来源来自软件设置内“音乐来源”设置所选择的“源”返回的在线链接。例如播放某首歌，本项目所做的只是将希望播放的歌曲名字、歌手名字等信息传递给“源”，若“源”返回了一个链接，则本项目将认为这就是该歌曲的音频数据而进行使用，至于这是不是正确的音频数据本项目无法校验其准确性，所以使用本项目的过程中可能会出现希望播放的音频与实际播放的音频不对应或者无法播放的问题。</p>
<p>1.3 本项目的非官方平台数据（例如我的收藏列表）来自使用者本地系统或者使用者连接的同步服务，本项目不对这些数据的合法性、准确性负责。</p>
<p>二、版权数据
2.1 使用本项目的过程中可能会产生版权数据。对于这些版权数据，本项目不拥有它们的所有权。为了避免侵权，使用者务必在24小时内清除使用本项目的过程中所产生的版权数据。</p>
<p>三、音乐平台别名
3.1 本项目内的官方音乐平台别名为本项目内对官方音乐平台的一个称呼，不包含恶意。如果官方音乐平台觉得不妥，可联系本项目更改或移除。</p>
<p>四、资源使用
4.1 本项目内使用的部分包括但不限于字体、图片等资源来源于互联网。如果出现侵权可联系本项目移除。</p>
<p>五、免责声明
5.1 由于使用本项目产生的包括由于本协议或由于使用或无法使用本项目而引起的任何性质的任何直接、间接、特殊、偶然或结果性损害（包括但不限于因商誉损失、停工、计算机故障或故障引起的损害赔偿，或任何及所有其他商业损害或损失）由使用者负责。</p>
<p>六、使用限制
6.1 本项目完全免费，且开源发布于 GitHub 面向全世界人用作对技术的学习交流。本项目不对项目内的技术可能存在违反当地法律法规的行为作保证。</p>
<p>6.2 禁止在违反当地法律法规的情况下使用本项目。 对于使用者在明知或不知当地法律法规不允许的情况下使用本项目所造成的任何违法违规行为由使用者承担，本项目不承担由此造成的任何直接、间接、特殊、偶然或结果性责任。</p>
<p>七、版权保护
7.1 音乐平台不易，请尊重版权，支持正版。</p>
<p>八、非商业性质
8.1 本项目仅用于对技术可行性的探索及研究，不接受任何商业（包括但不限于广告等）合作及捐赠。</p>
<p>九、接受协议
9.1 若你使用了本项目，将代表你接受本协议。</p>
]]></content><link href="https://github.com/jaaleng/gitblog/issues/17"/><category term="存档"/><published>2024-07-15T14:11:05+00:00</published></entry><entry><id>https://github.com/jaaleng/gitblog/issues/16</id><title>马斯克称星舰4周内将再次试飞</title><updated>2024-07-25T14:03:44.626970+00:00</updated><content type="html"><![CDATA[<p>据报道，SpaceX创始人埃隆·马斯克5日在社交媒体X上表示，该公司新一代重型运载火箭“星舰”将在4周内进行第五次轨道试飞。“星舰”火箭总长约120米，直径约9米，可重复使用。该火箭的设计目标是将人和货物送至地球轨道、月球乃至火星。
<img src="https://pic.imgdb.cn/item/668a7bedd9c307b7e935ceae.jpg" alt="" />
SpaceX公司的“星舰”火箭将在四周内进行第五次轨道试飞。这款120米长、直径9米的重型运载火箭分为“超级重型”助推器和“星舰”飞船两部分，均可重复使用。尽管此前的四次试飞遇到了多次技术挑战和失败，包括爆炸和失联，但公司计划在第五次试飞中尝试新的发射台捕获回收技术，以提高火箭的发射频率和可重复使用性。</p>
]]></content><link href="https://github.com/jaaleng/gitblog/issues/16"/><category term="存档"/><published>2024-07-07T11:29:23+00:00</published></entry><entry><id>https://github.com/jaaleng/gitblog/issues/15</id><title>腾讯视频 visionOS 端今日上线 提供逾 600 部作品</title><updated>2024-07-25T14:03:44.798118+00:00</updated><content type="html"><![CDATA[<p>腾讯视频 visionOS 端今日上线 提供逾 600 部作品</p>
<p>腾讯视频 visionOS 端今日上线，提供《庆余年第二季》《三体》《斗罗大陆》等逾 600 部精品佳作，基于 RealityKit 与空间音频技术，为平台热门影视 IP 构建了不同类型的 3D 空间环境，从视觉和听觉上为消费者带来更为真实的沉浸式空间体验。</p>
<p>电竞赛事中，腾讯视频技术团队将 3D 沙盘、游戏角色陪看、专业比赛数据多视角呈现等技术与方案进行融合，打造了王者沙盘功能。</p>
]]></content><link href="https://github.com/jaaleng/gitblog/issues/15"/><category term="存档"/><published>2024-06-14T13:26:24+00:00</published></entry><entry><id>https://github.com/jaaleng/gitblog/issues/14</id><title>庆余年 第二季 </title><updated>2024-07-25T14:03:44.946738+00:00</updated><content type="html"><![CDATA[<p>名称：庆余年 第二季 (2024) 4K + 1080p 纯净版 更E15 【热播古装剧】</p>
<p><img src="https://img.m.mw/file/2dce7b196f325d3bd84ae.jpg" alt="image" /></p>
<p>描述：该剧改编自猫腻同名畅销小说，承接上季，范闲（张若昀 饰）率领使团回归途中，二皇子以费介、范思辙以及滕家遗孤的安危来威胁范闲，逼他向自己俯首称臣，二人的矛盾就此激发。范闲所面对的抱月楼迷局，以及接踵而至的春闱危机，都是二皇子精心给范闲布下的陷阱。</p>
<p>链接：<a href="https://www.alipan.com/s/gkdra8bJ1qx">https://www.alipan.com/s/gkdra8bJ1qx</a></p>
]]></content><link href="https://github.com/jaaleng/gitblog/issues/14"/><category term="存档"/><published>2024-05-22T15:31:15+00:00</published></entry><entry><id>https://github.com/jaaleng/gitblog/issues/13</id><title>一个开源的多人在线协作知识库应用</title><updated>2024-07-25T14:03:45.105070+00:00</updated><content type="html"><![CDATA[<p>📄 <a href="https://github.com/outline/outline">Outline - 一个开源的多人在线协作知识库应用</a></p>
<p>Outline 的界面美观、功能丰富、兼容 Markdown 的特点，支持中文和 Docker 部署</p>
<p>可作为私人 wiki 或中小型公司的内部文档和知识库平台</p>
<p>在 config.sh 中找到 DEFAULT_LANGUAGE 改成 zh_CN 就是默认中文</p>
]]></content><link href="https://github.com/jaaleng/gitblog/issues/13"/><category term="存档"/><published>2024-05-21T14:34:35+00:00</published></entry><entry><id>https://github.com/jaaleng/gitblog/issues/11</id><title>发个视频试下</title><updated>2024-07-25T14:03:45.262600+00:00</updated><content type="html"><![CDATA[<video width="560" height="480" controls>
 <source src="https://jreey.iblogger.org/usr/uploads/2024/05/1537025218.mp4" type="video/mp4">
</video>]]></content><link href="https://github.com/jaaleng/gitblog/issues/11"/><category term="心情"/><published>2024-05-13T14:23:15+00:00</published></entry><entry><id>https://github.com/jaaleng/gitblog/issues/10</id><title>一个免费电子书下载站</title><updated>2024-07-25T14:03:45.446643+00:00</updated><content type="html"><![CDATA[<p>一个免费电子书下载站，提供 pdf/txt/mobi/epub/kindle 格式的城通网盘电子书资源下载。可以配合前两天分享的城通网盘解析来下载资源</p>
<p>出版书籍，数量挺多的，网站支持搜索和分类，书籍涵盖人文、历史、小说、经济、励志、学习、生活、套装等领域。</p>
<p>有广告！有广告！有广告！</p>
<p><a href="https://www.huibooks.com/">https://www.huibooks.com/</a></p>
]]></content><link href="https://github.com/jaaleng/gitblog/issues/10"/><category term="存档"/><published>2024-05-06T15:27:23+00:00</published></entry><entry><id>https://github.com/jaaleng/gitblog/issues/9</id><title>TensorFlow Internals.</title><updated>2024-07-25T14:03:45.637495+00:00</updated><content type="html"><![CDATA[<p>It is open source ebook about TensorFlow kernel and implementation mechanism, including programming model, computation graph, distributed training for machine learning.</p>
<p>Downloads
You can obtain full latex source files of TensorFlow Internals from <a href="https://gitlab.com/horance/tensorflow-internals">https://gitlab.com/horance/tensorflow-internals</a></p>
<p>Install Tex
You should install full texlive packages.</p>
<p>Ubuntu
...
$ sudo apt-get install texlive-full
...
MacOS
Download <a href="http://tug.org/mactex/">MacTeX.pkg</a>, and install it.</p>
<p>Windowns
Download <a href="http://www.ctex.org/CTeXDownload">CTEX-full</a>, and install it.</p>
<p>Install Missing Fonts
Then you should install some missing chinese fonts. Please download missing fonts from Gitlab.
<code>$ git clone https://gitlab.com/horance/fonts.git</code>
Then install all missing fonts.</p>
<p>Ubuntu</p>
<pre><code>$ sudo cp fonts/* /usr/local/share/fonts
$ sudo fc-cache
</code></pre>
<p>MacOS
Import all missing fonts into fontbook, then cache all fonts.</p>
<p><code> $ sudo fc-cache</code></p>
<p>Windows
Copy the all missing fonts into C:/WINDOWS/Fonts, then cache all fonts.
.
$ fc-cache
.
Build
.
<code>$ make</code>
.
if you happen to Error begin with ?, then press R(not r) and Enter to continue.</p>
<p>Preview PDF
Mac OSX
.
<code>$ open output/tensorflow-internals.pdf</code>
.
Ubuntu
.
<code>$ okular output/tensorflow-internals.pdf</code>
.</p>
<p>if no okular installed, please install it.
.
<code>$ sudo apt-get install okular</code>
.</p>
<p>Windows
open the file from directory tensorflow-internals/output.</p>
]]></content><link href="https://github.com/jaaleng/gitblog/issues/9"/><category term="存档"/><published>2024-05-05T15:31:52+00:00</published></entry><entry><id>https://github.com/jaaleng/gitblog/issues/8</id><title>微信视频号下载工具</title><updated>2024-07-25T14:03:45.821400+00:00</updated><content type="html"><![CDATA[<p>🆔  软件名称：微信视频号下载工具</p>
<p>⭐️  软件功能：视频号下载</p>
<p>➡️  支持平台：#Windows</p>
<p>📁  软件简介：一款视频下载工具，用于下载微信视频号的视频和直播回放。</p>
<p>软件能自动监听微信视频号上的视频，支持下载普通视频和直播回放。</p>
<p>可以复制视频的下载链接，使用其他下载工具将视频保存到本地。</p>
<p>也可以选择手动下载，即通过复制链接后用其他工具下载；或选择自动下载，直接在软件中下载视频。</p>
<p>⬇️  软件下载：<a href="https://github.com/qiye45/wechatVideoDownload/releases">点击下载</a></p>
]]></content><link href="https://github.com/jaaleng/gitblog/issues/8"/><category term="存档"/><published>2024-05-01T16:12:54+00:00</published></entry><entry><id>https://github.com/jaaleng/gitblog/issues/7</id><title>苹果发布新品邀请函：放飞吧！</title><updated>2024-07-25T14:03:45.991172+00:00</updated><content type="html"><![CDATA[<p><img src="https://pic.ym.today/file/a1758288054a91217edd3.jpg" alt="image" /></p>
<p>苹果发布新品邀请函：放飞吧！</p>
<p>5 月 7 日晚上十点，邀请函中苹果 logo 里一根 Apple Pencil。新款 iPad Pro 和 iPad Air 来了！ ​​​</p>
]]></content><link href="https://github.com/jaaleng/gitblog/issues/7"/><category term="生活"/><published>2024-04-23T17:32:42+00:00</published></entry><entry><id>https://github.com/jaaleng/gitblog/issues/6</id><title>谢谢大家了</title><updated>2024-07-25T14:03:46.149126+00:00</updated><content type="html"><![CDATA[<p>近几年，困为繁重的工作根本没有顾及到网络，有空就刷下微信，聊以度日。</p>
<p>2024年过年后，工厂突然没有订单，一下处于半失业状态，有活就打电话丶没话就在家歇着，人一下子就闲了下来，想再去找个工作，还动不动打电话，不找吧，仅仅能发个千元的生活费。后来想想，先歇着吧，就又对网络上心了。</p>
<p>首先就是接触到github的好多大神，看了好多优秀的项目，虽然自己部暑不了，但感觉眼界一下开了。有位jeely的大神，说建什么都建什么，真是羡慕。首先接触的是极简博客，然后是<a href="https://m.mblog.club">极简朋友圈</a>做的越来越好。还有位Github的大神<a href="https://github.com/yihong0618/gitblog">yihong</a>，我部署就是他的<a href="https://github.com/yihong0618/gitblog/issues/177">Github</a>博客，对于小白来说，还是折腾了好久，不过还算成功了。感谢大家了。
老想着Github这样用是不是滥用，但是自己实在没有多余的金钱和精力，就先这样凑合吧。再次感谢那些帮助过我的朋友们，有很多问题他们都是不耐其烦的解答。</p>
<p>谢谢大家了！</p>
]]></content><link href="https://github.com/jaaleng/gitblog/issues/6"/><category term="生活"/><published>2024-04-21T16:25:25+00:00</published></entry><entry><id>https://github.com/jaaleng/gitblog/issues/5</id><title>正向星系NGC 1232  </title><updated>2024-07-25T14:03:46.319268+00:00</updated><content type="html"><![CDATA[<p>相比之下，我还是喜欢无垠的宇宙星空.</p>
<p><img src="https://pic.ym.today/file/72a2d6bed528c3043250a.jpg" alt="image" /></p>
<p>正向星系NGC 1232<br />
影像提供与版权:Neil Corke</p>
<p>说明： 从我们在银河系的视角看出去，NGC1232是个正向星系。这个庞大美丽、离我们约4千7百万光年远的螺旋星系，位于南天的波江座内，其跨幅将近有200,000光年。这幅由多色望远镜照片组合而成的NGC1232清晰影像，呈现了这个遥远星系无比细致的结构。从核心往外，星系的色泽从中心年老恒星的黄光，转变为宏伟螺旋臂上的泛蓝年轻星团和泛红的恒星形成区。NGC1232在视觉上的小棒旋伴星系，其编录号NGC 1232A。然而它的估计距离远在3亿光年之外，因此不太可能和NGC1232有互动。除此之外，醒目的带芒亮星近在我们银河系里，远比NGC 1232要近。</p>
]]></content><link href="https://github.com/jaaleng/gitblog/issues/5"/><category term="天文"/><published>2024-04-19T03:59:31+00:00</published></entry><entry><id>https://github.com/jaaleng/gitblog/issues/4</id><title>苹果中国应用商店下架WhatsApp和Threads</title><updated>2024-07-25T14:03:46.488851+00:00</updated><content type="html"><![CDATA[<p>监管越来越严重了。</p>
<blockquote>
<p>据《华尔街日报》，苹果公司星期五（4月19日）从中国应用商店下架了Meta所开发的通讯软件WhatsApp和社媒平台Threads。
《华尔街日报》报道称，苹果公司透露，这是中国最高互联网监管机构出于国家安全考虑，要求其删除这些应用程序。
该报援引苹果发言人的声明称：“我们有义务遵守业务所在国家的法律，即使我们不同意。”
中国工信部去年8月9日发布通知，要求境内所有App都必须向所在地的省级通信管理局备案。在通知印发前上线的应用程序，需在2024年3月底前完成备案。没有备案者不得从事网络讯息服务。
工信部的通知还说，从今年4月至6月底，电信主管部门将组织对APP备案情况开展监督检查，对仍未履行备案手续的APP依法进行处置。</p>
</blockquote>
]]></content><link href="https://github.com/jaaleng/gitblog/issues/4"/><category term="心情"/><published>2024-04-19T03:19:28+00:00</published></entry><entry><id>https://github.com/jaaleng/gitblog/issues/3</id><title>测</title><updated>2024-07-25T14:03:46.654373+00:00</updated><content type="html"><![CDATA[<p>好</p>
]]></content><link href="https://github.com/jaaleng/gitblog/issues/3"/><category term="存档"/><published>2024-04-19T02:44:28+00:00</published></entry><entry><id>https://github.com/jaaleng/gitblog/issues/2</id><title>测试</title><updated>2024-07-25T14:03:46.793780+00:00</updated><content type="html"><![CDATA[<p>测试</p>
]]></content><link href="https://github.com/jaaleng/gitblog/issues/2"/><category term="天文"/><published>2024-04-19T02:33:41+00:00</published></entry><entry><id>https://github.com/jaaleng/gitblog/issues/1</id><title>About </title><updated>2024-07-25T14:03:46.950256+00:00</updated><content type="html"><![CDATA[<p>About!</p>
]]></content><link href="https://github.com/jaaleng/gitblog/issues/1"/><category term="About"/><published>2024-04-19T02:31:03+00:00</published></entry></feed>